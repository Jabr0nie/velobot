{
	"id": "ccc01a911e221ba6fe2373264e671a0d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"velo/slipstream-main/contracts/core/VeloBot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n// Velodrome Slipstream Pool Interface (from provided ICLPoolActions)\r\ninterface ICLPoolActions {\r\n    function swap(\r\n        address recipient,\r\n        bool zeroForOne,\r\n        int256 amountSpecified,\r\n        uint160 sqrtPriceLimitX96,\r\n        bytes calldata data\r\n    ) external returns (int256 amount0, int256 amount1);\r\n}\r\n\r\ncontract DirectPoolSwap {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public immutable pool; // USDC/VELO pool address\r\n    address public constant USDC = 0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85; // USDC on Optimism\r\n    address public constant VELO = 0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db; // VELO on Optimism\r\n    bool public immutable zeroForOne; // True if USDC is token0, false if VELO is token0\r\n\r\n    // Event to log swaps\r\n    event SwapExecuted(address indexed user, uint256 amountIn, uint256 amountOut);\r\n\r\n    constructor(address _pool, bool _zeroForOne) {\r\n        pool = _pool;\r\n        zeroForOne = _zeroForOne;\r\n    }\r\n\r\n    /// @notice Swaps a fixed amount of USDC for VELO directly with the pool\r\n    /// @param amountIn The amount of USDC to swap\r\n    /// @param amountOutMinimum The minimum amount of VELO to receive\r\n    /// @param deadline The timestamp after which the transaction will revert\r\n    /// @param sqrtPriceLimitX96 The price limit for the swap (0 for no limit)\r\n    /// @return amountOut The amount of VELO received\r\n    function swapExactInputSingle(\r\n        uint256 amountIn,\r\n        uint256 amountOutMinimum,\r\n        uint256 deadline,\r\n        uint160 sqrtPriceLimitX96\r\n    ) external returns (uint256 amountOut) {\r\n        // Ensure deadline is in the future\r\n        require(deadline >= block.timestamp, \"Swap deadline expired\");\r\n        require(amountIn > 0, \"Invalid input amount\");\r\n\r\n        // Transfer USDC to this contract\r\n        IERC20(USDC).safeTransferFrom(msg.sender, address(this), amountIn);\r\n\r\n      IERC20(USDC).approve(pool, amountIn);\r\n\r\n        // Prepare swap data to pass to callback\r\n        bytes memory data = abi.encode(msg.sender, amountOutMinimum);\r\n\r\n        // Call the pool's swap function\r\n        (int256 amount0, int256 amount1) = ICLPoolActions(pool).swap(\r\n            address(this), // Recipient of output tokens (this contract)\r\n            zeroForOne, // Direction of swap (USDC -> VELO or VELO -> USDC)\r\n            int256(amountIn), // Positive for exact input\r\n            sqrtPriceLimitX96, // Price limit (0 for no limit)\r\n            data // Pass data to callback\r\n        );\r\n\r\n        // Calculate amountOut based on token order\r\n        amountOut = zeroForOne ? uint256(-amount1) : uint256(-amount0);\r\n\r\n        // Ensure minimum output is met\r\n        require(amountOut >= amountOutMinimum, \"Insufficient output amount\");\r\n\r\n        // Transfer VELO to the caller\r\n        IERC20(VELO).safeTransfer(msg.sender, amountOut);\r\n\r\n        // Emit event\r\n        emit SwapExecuted(msg.sender, amountIn, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    /// @notice Callback function called by the pool during the swap\r\n    /// @param amount0Delta The change in token0 balance (negative if we pay, positive if we receive)\r\n    /// @param amount1Delta The change in token1 balance (negative if we pay, positive if we receive)\r\n    /// @param data Data passed from the swap call\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external {\r\n        // Verify the caller is the pool\r\n        require(msg.sender == pool, \"Invalid caller\");\r\n\r\n        // Decode data\r\n        (address recipient, uint256 amountOutMinimum) = abi.decode(data, (address, uint256));\r\n\r\n        // Determine input and output amounts\r\n        uint256 amountToPay;\r\n        address tokenToPay;\r\n\r\n        if (zeroForOne) {\r\n            // USDC -> VELO: We pay token0 (USDC), receive token1 (VELO)\r\n            require(amount0Delta > 0, \"Invalid amount0Delta\");\r\n            require(amount1Delta < 0, \"Invalid amount1Delta\");\r\n            amountToPay = uint256(amount0Delta);\r\n            tokenToPay = USDC;\r\n        } else {\r\n            // VELO -> USDC: We pay token1 (VELO), receive token0 (USDC)\r\n            require(amount1Delta > 0, \"Invalid amount1Delta\");\r\n            require(amount0Delta < 0, \"Invalid amount0Delta\");\r\n            amountToPay = uint256(amount1Delta);\r\n            tokenToPay = VELO;\r\n        }\r\n\r\n        // Transfer the input tokens to the pool\r\n        IERC20(tokenToPay).safeTransfer(pool, amountToPay);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURN 0xDD PUSH32 0x75E1086C95ED852522613A17720732B563A3E8D760039CEBA4F24A2664736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURN 0xDD PUSH32 0x75E1086C95ED852522613A17720732B563A3E8D760039CEBA4F24A2664736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"velo/slipstream-main/contracts/core/VeloBot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"velo/slipstream-main/contracts/core/VeloBot.sol": {
				"DirectPoolSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_zeroForOne",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapExecuted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VELO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMinimum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "zeroForOne",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"swapExactInputSingle(uint256,uint256,uint256,uint160)": {
								"params": {
									"amountIn": "The amount of USDC to swap",
									"amountOutMinimum": "The minimum amount of VELO to receive",
									"deadline": "The timestamp after which the transaction will revert",
									"sqrtPriceLimitX96": "The price limit for the swap (0 for no limit)"
								},
								"returns": {
									"amountOut": "The amount of VELO received"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"params": {
									"amount0Delta": "The change in token0 balance (negative if we pay, positive if we receive)",
									"amount1Delta": "The change in token1 balance (negative if we pay, positive if we receive)",
									"data": "Data passed from the swap call"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":521:4720  contract DirectPoolSwap {... */\n  mstore(0x40, 0xc0)\n    /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1054:1165  constructor(address _pool, bool _zeroForOne) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1110:1122  pool = _pool */\n  swap1\n  swap2\n  and\n  0x80\n  mstore\n    /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1133:1157  zeroForOne = _zeroForOne */\n  iszero\n  iszero\n  0xa0\n  mstore\n    /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":521:4720  contract DirectPoolSwap {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:466   */\ntag_3:\n    /* \"#utility.yul\":90:96   */\n  0x00\n    /* \"#utility.yul\":98:104   */\n  0x00\n    /* \"#utility.yul\":151:153   */\n  0x40\n    /* \"#utility.yul\":139:148   */\n  dup4\n    /* \"#utility.yul\":130:137   */\n  dup6\n    /* \"#utility.yul\":126:149   */\n  sub\n    /* \"#utility.yul\":122:154   */\n  slt\n    /* \"#utility.yul\":119:171   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":167:168   */\n  0x00\n    /* \"#utility.yul\":164:165   */\n  0x00\n    /* \"#utility.yul\":157:169   */\n  revert\n    /* \"#utility.yul\":119:171   */\ntag_9:\n    /* \"#utility.yul\":193:209   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":238:269   */\n  dup2\n  and\n    /* \"#utility.yul\":228:270   */\n  dup2\n  eq\n    /* \"#utility.yul\":218:288   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":284:285   */\n  0x00\n    /* \"#utility.yul\":281:282   */\n  0x00\n    /* \"#utility.yul\":274:286   */\n  revert\n    /* \"#utility.yul\":218:288   */\ntag_10:\n    /* \"#utility.yul\":357:359   */\n  0x20\n    /* \"#utility.yul\":342:360   */\n  dup5\n  add\n    /* \"#utility.yul\":336:361   */\n  mload\n    /* \"#utility.yul\":307:312   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":399:414   */\n  dup1\n  iszero\n    /* \"#utility.yul\":392:415   */\n  iszero\n    /* \"#utility.yul\":380:416   */\n  dup2\n  eq\n    /* \"#utility.yul\":370:434   */\n  tag_11\n  jumpi\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":427:428   */\n  0x00\n    /* \"#utility.yul\":420:432   */\n  revert\n    /* \"#utility.yul\":370:434   */\ntag_11:\n    /* \"#utility.yul\":453:460   */\n  dup1\n    /* \"#utility.yul\":443:460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":521:4720  contract DirectPoolSwap {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa27402d17b909daf1a82663f44f6dcd7eb5f66f6281434d3ee65954b76026db1\")\n  0x00\n  assignImmutable(\"0x4e7cce1dba04742447559272cc79c69a1a796aae91eb6d8390351546d2d8f00d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":521:4720  contract DirectPoolSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16f0115b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x77fc0617\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa0eeb39a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb25b6bd7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfa461e33\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":587:616  address public immutable pool */\n    tag_3:\n      tag_9\n      immutable(\"0x4e7cce1dba04742447559272cc79c69a1a796aae91eb6d8390351546d2d8f00d\")\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":587:616  address public immutable pool */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1588:3170  function swapExactInputSingle(... */\n    tag_4:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":1117:1142   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x20\n        /* \"#utility.yul\":1090:1108   */\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1588:3170  function swapExactInputSingle(... */\n      tag_11\n        /* \"#utility.yul\":971:1148   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":649:722  address public constant USDC = 0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85 */\n    tag_5:\n      tag_9\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":680:722  0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85 */\n      0x0b2c639c533813f4aa9d7837caf62653d097ff85\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":649:722  address public constant USDC = 0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85 */\n      dup2\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":749:822  address public constant VELO = 0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db */\n    tag_6:\n      tag_9\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":780:822  0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db */\n      0x9560e827af36c94d2ac33a39bce1fe78631088db\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":749:822  address public constant VELO = 0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db */\n      dup2\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":849:881  bool public immutable zeroForOne */\n    tag_7:\n      tag_25\n      immutable(\"0xa27402d17b909daf1a82663f44f6dcd7eb5f66f6281434d3ee65954b76026db1\")\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1318:1332   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1311:1333   */\n      iszero\n        /* \"#utility.yul\":1293:1334   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1281:1283   */\n      0x20\n        /* \"#utility.yul\":1266:1284   */\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":849:881  bool public immutable zeroForOne */\n      tag_11\n        /* \"#utility.yul\":1153:1340   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3506:4717  function uniswapV3SwapCallback(... */\n    tag_8:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1588:3170  function swapExactInputSingle(... */\n    tag_16:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1768:1785  uint256 amountOut */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1863:1878  block.timestamp */\n      timestamp\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1851:1859  deadline */\n      dup4\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1851:1878  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1843:1904  require(deadline >= block.timestamp, \"Swap deadline expired\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2370:2372   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1843:1904  require(deadline >= block.timestamp, \"Swap deadline expired\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2352:2373   */\n      mstore\n        /* \"#utility.yul\":2409:2411   */\n      0x15\n        /* \"#utility.yul\":2389:2407   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2382:2412   */\n      mstore\n      shl(0x5a, 0x14ddd85c08191958591b1a5b9948195e1c1a5c9959)\n        /* \"#utility.yul\":2428:2446   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2421:2472   */\n      mstore\n        /* \"#utility.yul\":2489:2507   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1843:1904  require(deadline >= block.timestamp, \"Swap deadline expired\") */\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1934:1935  0 */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1923:1931  amountIn */\n      dup6\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1923:1935  amountIn > 0 */\n      gt\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1915:1960  require(amountIn > 0, \"Invalid input amount\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1915:1960  require(amountIn > 0, \"Invalid input amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2702:2723   */\n      mstore\n        /* \"#utility.yul\":2759:2761   */\n      0x14\n        /* \"#utility.yul\":2739:2757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2732:2762   */\n      mstore\n      shl(0x62, 0x125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d)\n        /* \"#utility.yul\":2778:2796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2771:2821   */\n      mstore\n        /* \"#utility.yul\":2838:2856   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1915:1960  require(amountIn > 0, \"Invalid input amount\") */\n      tag_35\n        /* \"#utility.yul\":2518:2862   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1915:1960  require(amountIn > 0, \"Invalid input amount\") */\n    tag_37:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2016:2082  IERC20(USDC).safeTransferFrom(msg.sender, address(this), amountIn) */\n      tag_40\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":680:722  0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85 */\n      0x0b2c639c533813f4aa9d7837caf62653d097ff85\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2046:2056  msg.sender */\n      caller\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2066:2070  this */\n      address\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2073:2081  amountIn */\n      dup9\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2016:2045  IERC20(USDC).safeTransferFrom */\n      tag_41\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2016:2082  IERC20(USDC).safeTransferFrom(msg.sender, address(this), amountIn) */\n      jump\t// in\n    tag_40:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2093:2129  IERC20(USDC).approve(pool, amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2114:2118  pool */\n      immutable(\"0x4e7cce1dba04742447559272cc79c69a1a796aae91eb6d8390351546d2d8f00d\")\n        /* \"#utility.yul\":3059:3091   */\n      and\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2093:2129  IERC20(USDC).approve(pool, amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3041:3092   */\n      mstore\n        /* \"#utility.yul\":3108:3126   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3101:3135   */\n      dup7\n      swap1\n      mstore\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":680:722  0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85 */\n      0x0b2c639c533813f4aa9d7837caf62653d097ff85\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2093:2113  IERC20(USDC).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":3014:3032   */\n      0x44\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2093:2129  IERC20(USDC).approve(pool, amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2212:2252  abi.encode(msg.sender, amountOutMinimum) */\n      0x40\n      dup1\n      mload\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2223:2233  msg.sender */\n      caller\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2212:2252  abi.encode(msg.sender, amountOutMinimum) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":3041:3092   */\n      mstore\n        /* \"#utility.yul\":3108:3126   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3101:3135   */\n      dup7\n      swap1\n      mstore\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2212:2252  abi.encode(msg.sender, amountOutMinimum) */\n      dup2\n      mload\n      dup1\n      dup3\n      sub\n      dup4\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3014:3032   */\n      0x60\n      dup3\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2212:2252  abi.encode(msg.sender, amountOutMinimum) */\n      swap3\n      dup4\n      swap1\n      mstore\n      shl(0xe3, 0x02515961)\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2342:2696  ICLPoolActions(pool).swap(... */\n      swap1\n      swap3\n      mstore\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2357:2361  pool */\n      immutable(\"0x4e7cce1dba04742447559272cc79c69a1a796aae91eb6d8390351546d2d8f00d\")\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2342:2367  ICLPoolActions(pool).swap */\n      and\n      swap1\n      0x128acb08\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2342:2696  ICLPoolActions(pool).swap(... */\n      tag_49\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2390:2394  this */\n      address\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2456:2466  zeroForOne */\n      immutable(\"0xa27402d17b909daf1a82663f44f6dcd7eb5f66f6281434d3ee65954b76026db1\")\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2540:2548  amountIn */\n      dup14\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2592:2609  sqrtPriceLimitX96 */\n      dup12\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2212:2252  abi.encode(msg.sender, amountOutMinimum) */\n      dup11\n      swap1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2342:2696  ICLPoolActions(pool).swap(... */\n      0x64\n      add\n      tag_50\n      jump\t// in\n    tag_49:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2307:2696  (int256 amount0, int256 amount1) = ICLPoolActions(pool).swap(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2774:2784  zeroForOne */\n      immutable(\"0xa27402d17b909daf1a82663f44f6dcd7eb5f66f6281434d3ee65954b76026db1\")\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2774:2824  zeroForOne ? uint256(-amount1) : uint256(-amount0) */\n      tag_55\n      jumpi\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2815:2823  -amount0 */\n      tag_56\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2816:2823  amount0 */\n      dup3\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2815:2823  -amount0 */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2774:2824  zeroForOne ? uint256(-amount1) : uint256(-amount0) */\n      jump(tag_59)\n    tag_55:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2795:2803  -amount1 */\n      tag_59\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2796:2803  amount1 */\n      dup2\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2795:2803  -amount1 */\n      tag_57\n      jump\t// in\n    tag_59:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2762:2824  amountOut = zeroForOne ? uint256(-amount1) : uint256(-amount0) */\n      swap4\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2899:2915  amountOutMinimum */\n      dup7\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2886:2895  amountOut */\n      dup5\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2886:2915  amountOut >= amountOutMinimum */\n      lt\n      iszero\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2878:2946  require(amountOut >= amountOutMinimum, \"Insufficient output amount\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4985:4987   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2878:2946  require(amountOut >= amountOutMinimum, \"Insufficient output amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4967:4988   */\n      mstore\n        /* \"#utility.yul\":5024:5026   */\n      0x1a\n        /* \"#utility.yul\":5004:5022   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4997:5027   */\n      mstore\n        /* \"#utility.yul\":5063:5091   */\n      0x496e73756666696369656e74206f757470757420616d6f756e74000000000000\n        /* \"#utility.yul\":5043:5061   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5036:5092   */\n      mstore\n        /* \"#utility.yul\":5109:5127   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2878:2946  require(amountOut >= amountOutMinimum, \"Insufficient output amount\") */\n      tag_35\n        /* \"#utility.yul\":4783:5133   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2878:2946  require(amountOut >= amountOutMinimum, \"Insufficient output amount\") */\n    tag_60:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2999:3047  IERC20(VELO).safeTransfer(msg.sender, amountOut) */\n      tag_63\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":780:822  0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db */\n      0x9560e827af36c94d2ac33a39bce1fe78631088db\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3025:3035  msg.sender */\n      caller\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3037:3046  amountOut */\n      dup7\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2999:3024  IERC20(VELO).safeTransfer */\n      tag_64\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":2999:3047  IERC20(VELO).safeTransfer(msg.sender, amountOut) */\n      jump\t// in\n    tag_63:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3088:3133  SwapExecuted(msg.sender, amountIn, amountOut) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5312:5337   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":5368:5370   */\n      0x20\n        /* \"#utility.yul\":5353:5371   */\n      dup2\n      add\n        /* \"#utility.yul\":5346:5380   */\n      dup7\n      swap1\n      mstore\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3101:3111  msg.sender */\n      caller\n      swap2\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3088:3133  SwapExecuted(msg.sender, amountIn, amountOut) */\n      0x2d043ce009ff53fd444b0f4f5ff4c3f4ee293265203f77f156eeb33b595dfc4f\n      swap2\n        /* \"#utility.yul\":5285:5303   */\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3088:3133  SwapExecuted(msg.sender, amountIn, amountOut) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3146:3162  return amountOut */\n      pop\n      pop\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":1588:3170  function swapExactInputSingle(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3506:4717  function uniswapV3SwapCallback(... */\n    tag_32:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3704:3714  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3718:3722  pool */\n      immutable(\"0x4e7cce1dba04742447559272cc79c69a1a796aae91eb6d8390351546d2d8f00d\")\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3704:3722  msg.sender == pool */\n      and\n      eq\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3696:3741  require(msg.sender == pool, \"Invalid caller\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5593:5595   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3696:3741  require(msg.sender == pool, \"Invalid caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5575:5596   */\n      mstore\n        /* \"#utility.yul\":5632:5634   */\n      0x0e\n        /* \"#utility.yul\":5612:5630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5605:5635   */\n      mstore\n      shl(0x91, 0x24b73b30b634b21031b0b63632b9)\n        /* \"#utility.yul\":5651:5669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5644:5688   */\n      mstore\n        /* \"#utility.yul\":5705:5723   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3696:3741  require(msg.sender == pool, \"Invalid caller\") */\n      tag_35\n        /* \"#utility.yul\":5391:5729   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3696:3741  require(msg.sender == pool, \"Invalid caller\") */\n    tag_68:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3779:3796  address recipient */\n      0x00\n      dup1\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3826:3862  abi.decode(data, (address, uint256)) */\n      tag_71\n      dup4\n      dup6\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3837:3841  data */\n      dup6\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3826:3862  abi.decode(data, (address, uint256)) */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3778:3862  (address recipient, uint256 amountOutMinimum) = abi.decode(data, (address, uint256)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3922:3941  uint256 amountToPay */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3952:3970  address tokenToPay */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3987:3997  zeroForOne */\n      immutable(\"0xa27402d17b909daf1a82663f44f6dcd7eb5f66f6281434d3ee65954b76026db1\")\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3983:4597  if (zeroForOne) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4111:4112  0 */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4096:4108  amount0Delta */\n      dup9\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4096:4112  amount0Delta > 0 */\n      sgt\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4088:4137  require(amount0Delta > 0, \"Invalid amount0Delta\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6316:6318   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4088:4137  require(amount0Delta > 0, \"Invalid amount0Delta\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6298:6319   */\n      mstore\n        /* \"#utility.yul\":6355:6357   */\n      0x14\n        /* \"#utility.yul\":6335:6353   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6328:6358   */\n      mstore\n      shl(0x60, 0x496e76616c696420616d6f756e743044656c7461)\n        /* \"#utility.yul\":6374:6392   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6367:6417   */\n      mstore\n        /* \"#utility.yul\":6434:6452   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4088:4137  require(amount0Delta > 0, \"Invalid amount0Delta\") */\n      tag_35\n        /* \"#utility.yul\":6114:6458   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4088:4137  require(amount0Delta > 0, \"Invalid amount0Delta\") */\n    tag_74:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4175:4176  0 */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4160:4172  amount1Delta */\n      dup8\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4160:4176  amount1Delta < 0 */\n      slt\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4152:4201  require(amount1Delta < 0, \"Invalid amount1Delta\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6665:6667   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4152:4201  require(amount1Delta < 0, \"Invalid amount1Delta\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6647:6668   */\n      mstore\n        /* \"#utility.yul\":6704:6706   */\n      0x14\n        /* \"#utility.yul\":6684:6702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6677:6707   */\n      mstore\n      shl(0x60, 0x496e76616c696420616d6f756e743144656c7461)\n        /* \"#utility.yul\":6723:6741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6716:6766   */\n      mstore\n        /* \"#utility.yul\":6783:6801   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4152:4201  require(amount1Delta < 0, \"Invalid amount1Delta\") */\n      tag_35\n        /* \"#utility.yul\":6463:6807   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4152:4201  require(amount1Delta < 0, \"Invalid amount1Delta\") */\n    tag_77:\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4238:4250  amount0Delta */\n      dup7\n      swap1\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":680:722  0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85 */\n      0x0b2c639c533813f4aa9d7837caf62653d097ff85\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3983:4597  if (zeroForOne) {... */\n      jump(tag_80)\n    tag_73:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4413:4414  0 */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4398:4410  amount1Delta */\n      dup8\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4398:4414  amount1Delta > 0 */\n      sgt\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4390:4439  require(amount1Delta > 0, \"Invalid amount1Delta\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6665:6667   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4390:4439  require(amount1Delta > 0, \"Invalid amount1Delta\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6647:6668   */\n      mstore\n        /* \"#utility.yul\":6704:6706   */\n      0x14\n        /* \"#utility.yul\":6684:6702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6677:6707   */\n      mstore\n      shl(0x60, 0x496e76616c696420616d6f756e743144656c7461)\n        /* \"#utility.yul\":6723:6741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6716:6766   */\n      mstore\n        /* \"#utility.yul\":6783:6801   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4390:4439  require(amount1Delta > 0, \"Invalid amount1Delta\") */\n      tag_35\n        /* \"#utility.yul\":6463:6807   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4390:4439  require(amount1Delta > 0, \"Invalid amount1Delta\") */\n    tag_81:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4477:4478  0 */\n      0x00\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4462:4474  amount0Delta */\n      dup9\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4462:4478  amount0Delta < 0 */\n      slt\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4454:4503  require(amount0Delta < 0, \"Invalid amount0Delta\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6316:6318   */\n      0x20\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4454:4503  require(amount0Delta < 0, \"Invalid amount0Delta\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6298:6319   */\n      mstore\n        /* \"#utility.yul\":6355:6357   */\n      0x14\n        /* \"#utility.yul\":6335:6353   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6328:6358   */\n      mstore\n      shl(0x60, 0x496e76616c696420616d6f756e743044656c7461)\n        /* \"#utility.yul\":6374:6392   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6367:6417   */\n      mstore\n        /* \"#utility.yul\":6434:6452   */\n      0x64\n      add\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4454:4503  require(amount0Delta < 0, \"Invalid amount0Delta\") */\n      tag_35\n        /* \"#utility.yul\":6114:6458   */\n      jump\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4454:4503  require(amount0Delta < 0, \"Invalid amount0Delta\") */\n    tag_83:\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4540:4552  amount1Delta */\n      dup6\n      swap1\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":780:822  0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db */\n      0x9560e827af36c94d2ac33a39bce1fe78631088db\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3983:4597  if (zeroForOne) {... */\n    tag_80:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4659:4709  IERC20(tokenToPay).safeTransfer(pool, amountToPay) */\n      tag_85\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4659:4690  IERC20(tokenToPay).safeTransfer */\n      dup3\n      and\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4691:4695  pool */\n      immutable(\"0x4e7cce1dba04742447559272cc79c69a1a796aae91eb6d8390351546d2d8f00d\")\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4697:4708  amountToPay */\n      dup5\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4659:4690  IERC20(tokenToPay).safeTransfer */\n      tag_64\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":4659:4709  IERC20(tokenToPay).safeTransfer(pool, amountToPay) */\n      jump\t// in\n    tag_85:\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3643:4717  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"velo/slipstream-main/contracts/core/VeloBot.sol\":3506:4717  function uniswapV3SwapCallback(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7032:7064   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7014:7065   */\n      mstore\n        /* \"#utility.yul\":7101:7133   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":7081:7099   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":7074:7134   */\n      mstore\n        /* \"#utility.yul\":7150:7168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7143:7177   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_87\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6987:7005   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_88:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3059:3091   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3041:3092   */\n      mstore\n        /* \"#utility.yul\":3108:3126   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3101:3135   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_92\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3014:3032   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_88\n        /* \"#utility.yul\":2867:3141   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_95:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_97)\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_35\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"#utility.yul\":222:353   */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":297:328   */\n      dup2\n      and\n        /* \"#utility.yul\":287:329   */\n      dup2\n      eq\n        /* \"#utility.yul\":277:347   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      0x00\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":277:347   */\n    tag_104:\n        /* \"#utility.yul\":222:353   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":358:966   */\n    tag_15:\n        /* \"#utility.yul\":444:450   */\n      0x00\n        /* \"#utility.yul\":452:458   */\n      0x00\n        /* \"#utility.yul\":460:466   */\n      0x00\n        /* \"#utility.yul\":468:474   */\n      0x00\n        /* \"#utility.yul\":521:524   */\n      0x80\n        /* \"#utility.yul\":509:518   */\n      dup6\n        /* \"#utility.yul\":500:507   */\n      dup8\n        /* \"#utility.yul\":496:519   */\n      sub\n        /* \"#utility.yul\":492:525   */\n      slt\n        /* \"#utility.yul\":489:542   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":538:539   */\n      0x00\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":528:540   */\n      revert\n        /* \"#utility.yul\":489:542   */\n    tag_106:\n        /* \"#utility.yul\":583:606   */\n      dup5\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":703:705   */\n      0x20\n        /* \"#utility.yul\":688:706   */\n      dup6\n      add\n        /* \"#utility.yul\":675:707   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":806:808   */\n      0x40\n        /* \"#utility.yul\":791:809   */\n      dup6\n      add\n        /* \"#utility.yul\":778:810   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":888:890   */\n      0x60\n        /* \"#utility.yul\":873:891   */\n      dup6\n      add\n        /* \"#utility.yul\":860:892   */\n      calldataload\n        /* \"#utility.yul\":901:934   */\n      tag_107\n        /* \"#utility.yul\":860:892   */\n      dup2\n        /* \"#utility.yul\":901:934   */\n      tag_100\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":358:966   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1345:2163   */\n    tag_31:\n        /* \"#utility.yul\":1431:1437   */\n      0x00\n        /* \"#utility.yul\":1439:1445   */\n      0x00\n        /* \"#utility.yul\":1447:1453   */\n      0x00\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1508:1510   */\n      0x60\n        /* \"#utility.yul\":1496:1505   */\n      dup6\n        /* \"#utility.yul\":1487:1494   */\n      dup8\n        /* \"#utility.yul\":1483:1506   */\n      sub\n        /* \"#utility.yul\":1479:1511   */\n      slt\n        /* \"#utility.yul\":1476:1528   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1524:1525   */\n      0x00\n        /* \"#utility.yul\":1521:1522   */\n      0x00\n        /* \"#utility.yul\":1514:1526   */\n      revert\n        /* \"#utility.yul\":1476:1528   */\n    tag_111:\n        /* \"#utility.yul\":1569:1592   */\n      dup5\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1674:1692   */\n      dup6\n      add\n        /* \"#utility.yul\":1661:1693   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1770:1772   */\n      0x40\n        /* \"#utility.yul\":1755:1773   */\n      dup6\n      add\n        /* \"#utility.yul\":1742:1774   */\n      calldataload\n        /* \"#utility.yul\":1797:1815   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1786:1816   */\n      dup2\n      gt\n        /* \"#utility.yul\":1783:1833   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":1829:1830   */\n      0x00\n        /* \"#utility.yul\":1826:1827   */\n      0x00\n        /* \"#utility.yul\":1819:1831   */\n      revert\n        /* \"#utility.yul\":1783:1833   */\n    tag_112:\n        /* \"#utility.yul\":1852:1874   */\n      dup6\n      add\n        /* \"#utility.yul\":1905:1909   */\n      0x1f\n        /* \"#utility.yul\":1897:1910   */\n      dup2\n      add\n        /* \"#utility.yul\":1893:1920   */\n      dup8\n      sgt\n        /* \"#utility.yul\":1883:1938   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1934:1935   */\n      0x00\n        /* \"#utility.yul\":1931:1932   */\n      0x00\n        /* \"#utility.yul\":1924:1936   */\n      revert\n        /* \"#utility.yul\":1883:1938   */\n    tag_113:\n        /* \"#utility.yul\":1974:1976   */\n      dup1\n        /* \"#utility.yul\":1961:1977   */\n      calldataload\n        /* \"#utility.yul\":2000:2018   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1992:1998   */\n      dup2\n        /* \"#utility.yul\":1989:2019   */\n      gt\n        /* \"#utility.yul\":1986:2036   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":1986:2036   */\n    tag_114:\n        /* \"#utility.yul\":2077:2084   */\n      dup8\n        /* \"#utility.yul\":2072:2074   */\n      0x20\n        /* \"#utility.yul\":2063:2069   */\n      dup3\n        /* \"#utility.yul\":2059:2061   */\n      dup5\n        /* \"#utility.yul\":2055:2070   */\n      add\n        /* \"#utility.yul\":2051:2075   */\n      add\n        /* \"#utility.yul\":2048:2085   */\n      gt\n        /* \"#utility.yul\":2045:2102   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2088:2100   */\n      revert\n        /* \"#utility.yul\":2045:2102   */\n    tag_115:\n        /* \"#utility.yul\":1345:2163   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":2129:2131   */\n      0x20\n        /* \"#utility.yul\":2121:2132   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1345:2163   */\n      jump\t// out\n        /* \"#utility.yul\":3146:3423   */\n    tag_47:\n        /* \"#utility.yul\":3213:3219   */\n      0x00\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"#utility.yul\":3254:3263   */\n      dup3\n        /* \"#utility.yul\":3245:3252   */\n      dup5\n        /* \"#utility.yul\":3241:3264   */\n      sub\n        /* \"#utility.yul\":3237:3269   */\n      slt\n        /* \"#utility.yul\":3234:3286   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3279:3280   */\n      0x00\n        /* \"#utility.yul\":3272:3284   */\n      revert\n        /* \"#utility.yul\":3234:3286   */\n    tag_120:\n        /* \"#utility.yul\":3314:3323   */\n      dup2\n        /* \"#utility.yul\":3308:3324   */\n      mload\n        /* \"#utility.yul\":3367:3372   */\n      dup1\n        /* \"#utility.yul\":3360:3373   */\n      iszero\n        /* \"#utility.yul\":3353:3374   */\n      iszero\n        /* \"#utility.yul\":3346:3351   */\n      dup2\n        /* \"#utility.yul\":3343:3375   */\n      eq\n        /* \"#utility.yul\":3333:3393   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3389:3390   */\n      0x00\n        /* \"#utility.yul\":3386:3387   */\n      0x00\n        /* \"#utility.yul\":3379:3391   */\n      revert\n        /* \"#utility.yul\":3333:3393   */\n    tag_121:\n        /* \"#utility.yul\":3412:3417   */\n      swap4\n        /* \"#utility.yul\":3146:3423   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3428:4194   */\n    tag_50:\n        /* \"#utility.yul\":3708:3709   */\n      0x01\n        /* \"#utility.yul\":3704:3705   */\n      dup1\n        /* \"#utility.yul\":3699:3702   */\n      0xa0\n        /* \"#utility.yul\":3695:3706   */\n      shl\n        /* \"#utility.yul\":3691:3710   */\n      sub\n        /* \"#utility.yul\":3683:3689   */\n      dup7\n        /* \"#utility.yul\":3679:3711   */\n      and\n        /* \"#utility.yul\":3668:3677   */\n      dup2\n        /* \"#utility.yul\":3661:3712   */\n      mstore\n        /* \"#utility.yul\":3762:3768   */\n      dup5\n        /* \"#utility.yul\":3755:3769   */\n      iszero\n        /* \"#utility.yul\":3748:3770   */\n      iszero\n        /* \"#utility.yul\":3743:3745   */\n      0x20\n        /* \"#utility.yul\":3732:3741   */\n      dup3\n        /* \"#utility.yul\":3728:3746   */\n      add\n        /* \"#utility.yul\":3721:3771   */\n      mstore\n        /* \"#utility.yul\":3807:3813   */\n      dup4\n        /* \"#utility.yul\":3802:3804   */\n      0x40\n        /* \"#utility.yul\":3791:3800   */\n      dup3\n        /* \"#utility.yul\":3787:3805   */\n      add\n        /* \"#utility.yul\":3780:3814   */\n      mstore\n        /* \"#utility.yul\":3879:3880   */\n      0x01\n        /* \"#utility.yul\":3875:3876   */\n      dup1\n        /* \"#utility.yul\":3870:3873   */\n      0xa0\n        /* \"#utility.yul\":3866:3877   */\n      shl\n        /* \"#utility.yul\":3862:3881   */\n      sub\n        /* \"#utility.yul\":3854:3860   */\n      dup4\n        /* \"#utility.yul\":3850:3882   */\n      and\n        /* \"#utility.yul\":3845:3847   */\n      0x60\n        /* \"#utility.yul\":3834:3843   */\n      dup3\n        /* \"#utility.yul\":3830:3848   */\n      add\n        /* \"#utility.yul\":3823:3883   */\n      mstore\n        /* \"#utility.yul\":3920:3923   */\n      0xa0\n        /* \"#utility.yul\":3914:3917   */\n      0x80\n        /* \"#utility.yul\":3903:3912   */\n      dup3\n        /* \"#utility.yul\":3899:3918   */\n      add\n        /* \"#utility.yul\":3892:3924   */\n      mstore\n        /* \"#utility.yul\":3642:3646   */\n      0x00\n        /* \"#utility.yul\":3953:3959   */\n      dup3\n        /* \"#utility.yul\":3947:3960   */\n      mload\n        /* \"#utility.yul\":3997:4003   */\n      dup1\n        /* \"#utility.yul\":3991:3994   */\n      0xa0\n        /* \"#utility.yul\":3980:3989   */\n      dup5\n        /* \"#utility.yul\":3976:3995   */\n      add\n        /* \"#utility.yul\":3969:4004   */\n      mstore\n        /* \"#utility.yul\":4057:4063   */\n      dup1\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4044:4050   */\n      dup6\n        /* \"#utility.yul\":4040:4055   */\n      add\n        /* \"#utility.yul\":4034:4037   */\n      0xc0\n        /* \"#utility.yul\":4023:4032   */\n      dup6\n        /* \"#utility.yul\":4019:4038   */\n      add\n        /* \"#utility.yul\":4013:4064   */\n      mcopy\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4108:4111   */\n      0xc0\n        /* \"#utility.yul\":4099:4105   */\n      dup3\n        /* \"#utility.yul\":4088:4097   */\n      dup6\n        /* \"#utility.yul\":4084:4106   */\n      add\n        /* \"#utility.yul\":4080:4112   */\n      add\n        /* \"#utility.yul\":4073:4116   */\n      mstore\n        /* \"#utility.yul\":4184:4187   */\n      0xc0\n        /* \"#utility.yul\":4177:4179   */\n      0x1f\n        /* \"#utility.yul\":4173:4180   */\n      not\n        /* \"#utility.yul\":4168:4170   */\n      0x1f\n        /* \"#utility.yul\":4160:4166   */\n      dup4\n        /* \"#utility.yul\":4156:4171   */\n      add\n        /* \"#utility.yul\":4152:4181   */\n      and\n        /* \"#utility.yul\":4141:4150   */\n      dup5\n        /* \"#utility.yul\":4137:4182   */\n      add\n        /* \"#utility.yul\":4133:4188   */\n      add\n        /* \"#utility.yul\":4125:4188   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3428:4194   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4199:4540   */\n    tag_54:\n        /* \"#utility.yul\":4276:4282   */\n      0x00\n        /* \"#utility.yul\":4284:4290   */\n      0x00\n        /* \"#utility.yul\":4337:4339   */\n      0x40\n        /* \"#utility.yul\":4325:4334   */\n      dup4\n        /* \"#utility.yul\":4316:4323   */\n      dup6\n        /* \"#utility.yul\":4312:4335   */\n      sub\n        /* \"#utility.yul\":4308:4340   */\n      slt\n        /* \"#utility.yul\":4305:4357   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      0x00\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4305:4357   */\n    tag_124:\n      pop\n      pop\n        /* \"#utility.yul\":4398:4414   */\n      dup1\n      mload\n        /* \"#utility.yul\":4504:4506   */\n      0x20\n        /* \"#utility.yul\":4489:4507   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4483:4508   */\n      mload\n        /* \"#utility.yul\":4398:4414   */\n      swap1\n      swap3\n        /* \"#utility.yul\":4483:4508   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":4199:4540   */\n      jump\t// out\n        /* \"#utility.yul\":4545:4778   */\n    tag_57:\n        /* \"#utility.yul\":4580:4583   */\n      0x00\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":4601:4623   */\n      dup3\n      add\n        /* \"#utility.yul\":4598:4743   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4665:4675   */\n      0x4e487b71\n        /* \"#utility.yul\":4660:4663   */\n      0xe0\n        /* \"#utility.yul\":4656:4676   */\n      shl\n        /* \"#utility.yul\":4653:4654   */\n      0x00\n        /* \"#utility.yul\":4646:4677   */\n      mstore\n        /* \"#utility.yul\":4700:4704   */\n      0x11\n        /* \"#utility.yul\":4697:4698   */\n      0x04\n        /* \"#utility.yul\":4690:4705   */\n      mstore\n        /* \"#utility.yul\":4728:4732   */\n      0x24\n        /* \"#utility.yul\":4725:4726   */\n      0x00\n        /* \"#utility.yul\":4718:4733   */\n      revert\n        /* \"#utility.yul\":4598:4743   */\n    tag_126:\n      pop\n        /* \"#utility.yul\":4763:4764   */\n      0x00\n        /* \"#utility.yul\":4759:4772   */\n      sub\n      swap1\n        /* \"#utility.yul\":4545:4778   */\n      jump\t// out\n        /* \"#utility.yul\":5734:6109   */\n    tag_72:\n        /* \"#utility.yul\":5810:5816   */\n      0x00\n        /* \"#utility.yul\":5818:5824   */\n      0x00\n        /* \"#utility.yul\":5871:5873   */\n      0x40\n        /* \"#utility.yul\":5859:5868   */\n      dup4\n        /* \"#utility.yul\":5850:5857   */\n      dup6\n        /* \"#utility.yul\":5846:5869   */\n      sub\n        /* \"#utility.yul\":5842:5874   */\n      slt\n        /* \"#utility.yul\":5839:5891   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":5887:5888   */\n      0x00\n        /* \"#utility.yul\":5884:5885   */\n      0x00\n        /* \"#utility.yul\":5877:5889   */\n      revert\n        /* \"#utility.yul\":5839:5891   */\n    tag_131:\n        /* \"#utility.yul\":5926:5935   */\n      dup3\n        /* \"#utility.yul\":5913:5936   */\n      calldataload\n        /* \"#utility.yul\":5945:5976   */\n      tag_132\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5945:5976   */\n      tag_100\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5995:6000   */\n      swap5\n        /* \"#utility.yul\":6073:6075   */\n      0x20\n        /* \"#utility.yul\":6058:6076   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":6045:6077   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5734:6109   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201c7f899d8cdbf26dd0ffe83f580438f626a1ee03a9005d7242036c0b48aa259964736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_bool_fromMemory": {
									"entryPoint": 70,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:468:7",
										"nodeType": "YulBlock",
										"src": "0:468:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:357:7",
													"nodeType": "YulBlock",
													"src": "109:357:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "155:16:7",
																"nodeType": "YulBlock",
																"src": "155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "164:1:7",
																					"nodeType": "YulLiteral",
																					"src": "164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "167:1:7",
																					"nodeType": "YulLiteral",
																					"src": "167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "157:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:7"
																			},
																			"nativeSrc": "157:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:7"
																		},
																		"nativeSrc": "157:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "130:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "139:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "126:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:7"
																		},
																		"nativeSrc": "126:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "151:2:7",
																		"nodeType": "YulLiteral",
																		"src": "151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "122:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:7"
																},
																"nativeSrc": "122:32:7",
																"nodeType": "YulFunctionCall",
																"src": "122:32:7"
															},
															"nativeSrc": "119:52:7",
															"nodeType": "YulIf",
															"src": "119:52:7"
														},
														{
															"nativeSrc": "180:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "180:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "199:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "193:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:7"
																},
																"nativeSrc": "193:16:7",
																"nodeType": "YulFunctionCall",
																"src": "193:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "184:5:7",
																	"nodeType": "YulTypedName",
																	"src": "184:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "272:16:7",
																"nodeType": "YulBlock",
																"src": "272:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "281:1:7",
																					"nodeType": "YulLiteral",
																					"src": "281:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "284:1:7",
																					"nodeType": "YulLiteral",
																					"src": "284:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "274:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "274:6:7"
																			},
																			"nativeSrc": "274:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "274:12:7"
																		},
																		"nativeSrc": "274:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "274:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "231:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "231:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "242:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "242:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "257:3:7",
																										"nodeType": "YulLiteral",
																										"src": "257:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "262:1:7",
																										"nodeType": "YulLiteral",
																										"src": "262:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "253:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "253:3:7"
																								},
																								"nativeSrc": "253:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "253:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "266:1:7",
																								"nodeType": "YulLiteral",
																								"src": "266:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "249:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "249:3:7"
																						},
																						"nativeSrc": "249:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "249:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "238:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "238:3:7"
																				},
																				"nativeSrc": "238:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "238:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "228:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "228:2:7"
																		},
																		"nativeSrc": "228:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "228:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "221:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "221:6:7"
																},
																"nativeSrc": "221:50:7",
																"nodeType": "YulFunctionCall",
																"src": "221:50:7"
															},
															"nativeSrc": "218:70:7",
															"nodeType": "YulIf",
															"src": "218:70:7"
														},
														{
															"nativeSrc": "297:15:7",
															"nodeType": "YulAssignment",
															"src": "297:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "307:5:7",
																"nodeType": "YulIdentifier",
																"src": "307:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:7"
																}
															]
														},
														{
															"nativeSrc": "321:40:7",
															"nodeType": "YulVariableDeclaration",
															"src": "321:40:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "346:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "357:2:7",
																				"nodeType": "YulLiteral",
																				"src": "357:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "342:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "342:3:7"
																		},
																		"nativeSrc": "342:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "342:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "336:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:5:7"
																},
																"nativeSrc": "336:25:7",
																"nodeType": "YulFunctionCall",
																"src": "336:25:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "325:7:7",
																	"nodeType": "YulTypedName",
																	"src": "325:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "418:16:7",
																"nodeType": "YulBlock",
																"src": "418:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "427:1:7",
																					"nodeType": "YulLiteral",
																					"src": "427:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:7",
																					"nodeType": "YulLiteral",
																					"src": "430:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "420:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "420:6:7"
																			},
																			"nativeSrc": "420:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "420:12:7"
																		},
																		"nativeSrc": "420:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "420:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "383:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "383:7:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "406:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "406:7:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "399:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "399:6:7"
																						},
																						"nativeSrc": "399:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "399:15:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "392:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "392:6:7"
																				},
																				"nativeSrc": "392:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "392:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "380:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "380:2:7"
																		},
																		"nativeSrc": "380:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "380:36:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "373:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:7"
																},
																"nativeSrc": "373:44:7",
																"nodeType": "YulFunctionCall",
																"src": "373:44:7"
															},
															"nativeSrc": "370:64:7",
															"nodeType": "YulIf",
															"src": "370:64:7"
														},
														{
															"nativeSrc": "443:17:7",
															"nodeType": "YulAssignment",
															"src": "443:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "453:7:7",
																"nodeType": "YulIdentifier",
																"src": "453:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "443:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool_fromMemory",
												"nativeSrc": "14:452:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "67:9:7",
														"nodeType": "YulTypedName",
														"src": "67:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "78:7:7",
														"nodeType": "YulTypedName",
														"src": "78:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "90:6:7",
														"nodeType": "YulTypedName",
														"src": "90:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "98:6:7",
														"nodeType": "YulTypedName",
														"src": "98:6:7",
														"type": ""
													}
												],
												"src": "14:452:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bool_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051610a8f380380610a8f83398101604081905261002e91610046565b6001600160a01b03909116608052151560a05261008d565b5f5f60408385031215610057575f5ffd5b82516001600160a01b038116811461006d575f5ffd5b60208401519092508015158114610082575f5ffd5b809150509250929050565b60805160a0516109b16100de5f395f81816101040152818161030b0152818161037e01526104ee01525f8181606901528181610216015281816102dc0152818161047a015261067101526109b15ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c806316f0115b1461006457806377fc0617146100a857806389a30271146100c9578063a0eeb39a146100e4578063b25b6bd7146100ff578063fa461e3314610136575b5f5ffd5b61008b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bb6100b63660046107c6565b61014b565b60405190815260200161009f565b61008b730b2c639c533813f4aa9d7837caf62653d097ff8581565b61008b739560e827af36c94d2ac33a39bce1fe78631088db81565b6101267f000000000000000000000000000000000000000000000000000000000000000081565b604051901515815260200161009f565b610149610144366004610804565b61046f565b005b5f428310156101995760405162461bcd60e51b815260206004820152601560248201527414ddd85c08191958591b1a5b9948195e1c1a5c9959605a1b60448201526064015b60405180910390fd5b5f85116101df5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b6044820152606401610190565b6101ff730b2c639c533813f4aa9d7837caf62653d097ff853330886106a0565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101869052730b2c639c533813f4aa9d7837caf62653d097ff859063095ea7b3906044016020604051808303815f875af115801561027d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a19190610880565b50604080513360208201528082018690528151808203830181526060820192839052630251596160e31b9092525f9081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063128acb08906103399030907f0000000000000000000000000000000000000000000000000000000000000000908d908b908a906064016108a6565b60408051808303815f875af1158015610354573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103789190610909565b915091507f00000000000000000000000000000000000000000000000000000000000000006103af576103aa8261092b565b6103b8565b6103b88161092b565b93508684101561040a5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610190565b610429739560e827af36c94d2ac33a39bce1fe78631088db338661070d565b604080518981526020810186905233917f2d043ce009ff53fd444b0f4f5ff4c3f4ee293265203f77f156eeb33b595dfc4f910160405180910390a2505050949350505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104d85760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606401610190565b5f806104e683850185610951565b915091505f5f7f0000000000000000000000000000000000000000000000000000000000000000156105bc575f88136105585760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743044656c746160601b6044820152606401610190565b5f871261059e5760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743144656c746160601b6044820152606401610190565b50869050730b2c639c533813f4aa9d7837caf62653d097ff85610662565b5f87136106025760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743144656c746160601b6044820152606401610190565b5f88126106485760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743044656c746160601b6044820152606401610190565b50859050739560e827af36c94d2ac33a39bce1fe78631088db5b6106966001600160a01b0382167f00000000000000000000000000000000000000000000000000000000000000008461070d565b5050505050505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107079186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610743565b50505050565b6040516001600160a01b0383811660248301526044820183905261073e91859182169063a9059cbb906064016106d5565b505050565b5f5f60205f8451602086015f885af180610762576040513d5f823e3d81fd5b50505f513d91508115610779578060011415610786565b6001600160a01b0384163b155b1561070757604051635274afe760e01b81526001600160a01b0385166004820152602401610190565b6001600160a01b03811681146107c3575f5ffd5b50565b5f5f5f5f608085870312156107d9575f5ffd5b84359350602085013592506040850135915060608501356107f9816107af565b939692955090935050565b5f5f5f5f60608587031215610817575f5ffd5b8435935060208501359250604085013567ffffffffffffffff81111561083b575f5ffd5b8501601f8101871361084b575f5ffd5b803567ffffffffffffffff811115610861575f5ffd5b876020828401011115610872575f5ffd5b949793965060200194505050565b5f60208284031215610890575f5ffd5b8151801515811461089f575f5ffd5b9392505050565b60018060a01b0386168152841515602082015283604082015260018060a01b038316606082015260a060808201525f82518060a0840152806020850160c085015e5f60c0828501015260c0601f19601f8301168401019150509695505050505050565b5f5f6040838503121561091a575f5ffd5b505080516020909101519092909150565b5f600160ff1b820161094b57634e487b7160e01b5f52601160045260245ffd5b505f0390565b5f5f60408385031215610962575f5ffd5b823561096d816107af565b94602093909301359350505056fea26469706673582212201c7f899d8cdbf26dd0ffe83f580438f626a1ee03a9005d7242036c0b48aa259964736f6c634300081d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA8F CODESIZE SUB DUP1 PUSH2 0xA8F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x80 MSTORE ISZERO ISZERO PUSH1 0xA0 MSTORE PUSH2 0x8D JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x57 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x9B1 PUSH2 0xDE PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x104 ADD MSTORE DUP2 DUP2 PUSH2 0x30B ADD MSTORE DUP2 DUP2 PUSH2 0x37E ADD MSTORE PUSH2 0x4EE ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0x69 ADD MSTORE DUP2 DUP2 PUSH2 0x216 ADD MSTORE DUP2 DUP2 PUSH2 0x2DC ADD MSTORE DUP2 DUP2 PUSH2 0x47A ADD MSTORE PUSH2 0x671 ADD MSTORE PUSH2 0x9B1 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x77FC0617 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xA0EEB39A EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xB25B6BD7 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x8B PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 DUP2 JUMP JUMPDEST PUSH2 0x8B PUSH20 0x9560E827AF36C94D2AC33A39BCE1FE78631088DB DUP2 JUMP JUMPDEST PUSH2 0x126 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH0 TIMESTAMP DUP4 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DDD85C08191958591B1A5B9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081A5B9C1D5D08185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x1FF PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 CALLER ADDRESS DUP9 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x2515961 PUSH1 0xE3 SHL SWAP1 SWAP3 MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x128ACB08 SWAP1 PUSH2 0x339 SWAP1 ADDRESS SWAP1 PUSH32 0x0 SWAP1 DUP14 SWAP1 DUP12 SWAP1 DUP11 SWAP1 PUSH1 0x64 ADD PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH32 0x0 PUSH2 0x3AF JUMPI PUSH2 0x3AA DUP3 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x3B8 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP4 POP DUP7 DUP5 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x429 PUSH20 0x9560E827AF36C94D2AC33A39BCE1FE78631088DB CALLER DUP7 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x2D043CE009FF53FD444B0F4F5FF4C3F4EE293265203F77F156EEB33B595DFC4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B21031B0B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E6 DUP4 DUP6 ADD DUP6 PUSH2 0x951 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH0 PUSH32 0x0 ISZERO PUSH2 0x5BC JUMPI PUSH0 DUP9 SGT PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743044656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP8 SLT PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743144656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST POP DUP7 SWAP1 POP PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 PUSH2 0x662 JUMP JUMPDEST PUSH0 DUP8 SGT PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743144656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP9 SLT PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743044656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST POP DUP6 SWAP1 POP PUSH20 0x9560E827AF36C94D2AC33A39BCE1FE78631088DB JUMPDEST PUSH2 0x696 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x0 DUP5 PUSH2 0x70D JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x707 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x743 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x73E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x6D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x779 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x7F9 DUP2 PUSH2 0x7AF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x84B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x861 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x872 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x890 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x89F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0xA0 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0xC0 DUP6 ADD MCOPY PUSH0 PUSH1 0xC0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x94B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 SUB SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x962 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x96D DUP2 PUSH2 0x7AF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR PUSH32 0x899D8CDBF26DD0FFE83F580438F626A1EE03A9005D7242036C0B48AA25996473 PUSH16 0x6C634300081D00330000000000000000 ",
							"sourceMap": "521:4199:6:-:0;;;1054:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1110:12:6;;;;;1133:24;;;;521:4199;;14:452:7;90:6;98;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:7;;228:42;;218:70;;284:1;281;274:12;218:70;357:2;342:18;;336:25;307:5;;-1:-1:-1;399:15:7;;392:23;380:36;;370:64;;430:1;427;420:12;370:64;453:7;443:17;;;14:452;;;;;:::o;:::-;521:4199:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@USDC_674": {
									"entryPoint": null,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VELO_677": {
									"entryPoint": null,
									"id": 677,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_589": {
									"entryPoint": 1859,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@pool_671": {
									"entryPoint": null,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 1696,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 1805,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactInputSingle_824": {
									"entryPoint": 331,
									"id": 824,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@uniswapV3SwapCallback_925": {
									"entryPoint": 1135,
									"id": 925,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@zeroForOne_679": {
									"entryPoint": null,
									"id": 679,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_int256_fromMemory": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_int256t_int256t_bytes_calldata_ptr": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint160": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2214,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f649e76d71df20e80337a2546c509955b4e6065141b8b9bd1833eafc7bf8c650__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_uint160": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7185:7",
										"nodeType": "YulBlock",
										"src": "0:7185:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:7",
													"nodeType": "YulBlock",
													"src": "115:102:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:7",
																								"nodeType": "YulLiteral",
																								"src": "198:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:7",
																								"nodeType": "YulLiteral",
																								"src": "203:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:7"
																						},
																						"nativeSrc": "194:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:7",
																						"nodeType": "YulLiteral",
																						"src": "207:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:7"
																				},
																				"nativeSrc": "190:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:7"
																		},
																		"nativeSrc": "178:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:51:7",
																"nodeType": "YulFunctionCall",
																"src": "160:51:7"
															},
															"nativeSrc": "160:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:203:7"
											},
											{
												"body": {
													"nativeSrc": "267:86:7",
													"nodeType": "YulBlock",
													"src": "267:86:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "331:16:7",
																"nodeType": "YulBlock",
																"src": "331:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:7",
																					"nodeType": "YulLiteral",
																					"src": "340:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:1:7",
																					"nodeType": "YulLiteral",
																					"src": "343:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "333:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:7"
																			},
																			"nativeSrc": "333:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:7"
																		},
																		"nativeSrc": "333:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "290:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "290:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "301:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "301:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "316:3:7",
																										"nodeType": "YulLiteral",
																										"src": "316:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "321:1:7",
																										"nodeType": "YulLiteral",
																										"src": "321:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "312:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "312:3:7"
																								},
																								"nativeSrc": "312:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "312:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "325:1:7",
																								"nodeType": "YulLiteral",
																								"src": "325:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "308:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "308:3:7"
																						},
																						"nativeSrc": "308:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "308:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "297:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "297:3:7"
																				},
																				"nativeSrc": "297:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "297:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "287:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "287:2:7"
																		},
																		"nativeSrc": "287:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "287:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "280:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "280:6:7"
																},
																"nativeSrc": "280:50:7",
																"nodeType": "YulFunctionCall",
																"src": "280:50:7"
															},
															"nativeSrc": "277:70:7",
															"nodeType": "YulIf",
															"src": "277:70:7"
														}
													]
												},
												"name": "validator_revert_uint160",
												"nativeSrc": "222:131:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "256:5:7",
														"nodeType": "YulTypedName",
														"src": "256:5:7",
														"type": ""
													}
												],
												"src": "222:131:7"
											},
											{
												"body": {
													"nativeSrc": "479:487:7",
													"nodeType": "YulBlock",
													"src": "479:487:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "526:16:7",
																"nodeType": "YulBlock",
																"src": "526:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "535:1:7",
																					"nodeType": "YulLiteral",
																					"src": "535:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "538:1:7",
																					"nodeType": "YulLiteral",
																					"src": "538:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "528:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:7"
																			},
																			"nativeSrc": "528:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "528:12:7"
																		},
																		"nativeSrc": "528:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "528:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "500:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "500:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "509:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "509:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "496:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "496:3:7"
																		},
																		"nativeSrc": "496:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "496:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "521:3:7",
																		"nodeType": "YulLiteral",
																		"src": "521:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "492:3:7"
																},
																"nativeSrc": "492:33:7",
																"nodeType": "YulFunctionCall",
																"src": "492:33:7"
															},
															"nativeSrc": "489:53:7",
															"nodeType": "YulIf",
															"src": "489:53:7"
														},
														{
															"nativeSrc": "551:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "564:1:7",
																"nodeType": "YulLiteral",
																"src": "564:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "555:5:7",
																	"nodeType": "YulTypedName",
																	"src": "555:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "574:32:7",
															"nodeType": "YulAssignment",
															"src": "574:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "596:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "583:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "583:12:7"
																},
																"nativeSrc": "583:23:7",
																"nodeType": "YulFunctionCall",
																"src": "583:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "574:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "574:5:7"
																}
															]
														},
														{
															"nativeSrc": "615:15:7",
															"nodeType": "YulAssignment",
															"src": "615:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "625:5:7",
																"nodeType": "YulIdentifier",
																"src": "625:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "615:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:7"
																}
															]
														},
														{
															"nativeSrc": "639:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "639:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "654:1:7",
																"nodeType": "YulLiteral",
																"src": "654:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "643:7:7",
																	"nodeType": "YulTypedName",
																	"src": "643:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "664:43:7",
															"nodeType": "YulAssignment",
															"src": "664:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "692:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "692:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "703:2:7",
																				"nodeType": "YulLiteral",
																				"src": "703:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "688:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:7"
																		},
																		"nativeSrc": "688:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "688:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "675:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "675:12:7"
																},
																"nativeSrc": "675:32:7",
																"nodeType": "YulFunctionCall",
																"src": "675:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "664:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "664:7:7"
																}
															]
														},
														{
															"nativeSrc": "716:17:7",
															"nodeType": "YulAssignment",
															"src": "716:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "726:7:7",
																"nodeType": "YulIdentifier",
																"src": "726:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "716:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:7"
																}
															]
														},
														{
															"nativeSrc": "742:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "742:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "757:1:7",
																"nodeType": "YulLiteral",
																"src": "757:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "746:7:7",
																	"nodeType": "YulTypedName",
																	"src": "746:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "767:43:7",
															"nodeType": "YulAssignment",
															"src": "767:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "795:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "806:2:7",
																				"nodeType": "YulLiteral",
																				"src": "806:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "791:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:7"
																		},
																		"nativeSrc": "791:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "791:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "778:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:12:7"
																},
																"nativeSrc": "778:32:7",
																"nodeType": "YulFunctionCall",
																"src": "778:32:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "767:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:7:7"
																}
															]
														},
														{
															"nativeSrc": "819:17:7",
															"nodeType": "YulAssignment",
															"src": "819:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "829:7:7",
																"nodeType": "YulIdentifier",
																"src": "829:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:7"
																}
															]
														},
														{
															"nativeSrc": "845:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "845:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "877:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "877:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "888:2:7",
																				"nodeType": "YulLiteral",
																				"src": "888:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "873:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "873:3:7"
																		},
																		"nativeSrc": "873:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "873:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "860:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "860:12:7"
																},
																"nativeSrc": "860:32:7",
																"nodeType": "YulFunctionCall",
																"src": "860:32:7"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "849:7:7",
																	"nodeType": "YulTypedName",
																	"src": "849:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "926:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "926:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint160",
																	"nativeSrc": "901:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "901:24:7"
																},
																"nativeSrc": "901:33:7",
																"nodeType": "YulFunctionCall",
																"src": "901:33:7"
															},
															"nativeSrc": "901:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "901:33:7"
														},
														{
															"nativeSrc": "943:17:7",
															"nodeType": "YulAssignment",
															"src": "943:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "953:7:7",
																"nodeType": "YulIdentifier",
																"src": "953:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "943:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint160",
												"nativeSrc": "358:608:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "421:9:7",
														"nodeType": "YulTypedName",
														"src": "421:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "432:7:7",
														"nodeType": "YulTypedName",
														"src": "432:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "444:6:7",
														"nodeType": "YulTypedName",
														"src": "444:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "452:6:7",
														"nodeType": "YulTypedName",
														"src": "452:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "460:6:7",
														"nodeType": "YulTypedName",
														"src": "460:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "468:6:7",
														"nodeType": "YulTypedName",
														"src": "468:6:7",
														"type": ""
													}
												],
												"src": "358:608:7"
											},
											{
												"body": {
													"nativeSrc": "1072:76:7",
													"nodeType": "YulBlock",
													"src": "1072:76:7",
													"statements": [
														{
															"nativeSrc": "1082:26:7",
															"nodeType": "YulAssignment",
															"src": "1082:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1094:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1094:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1105:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1090:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1090:3:7"
																},
																"nativeSrc": "1090:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1090:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1082:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1082:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1124:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1124:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1135:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1135:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:7"
																},
																"nativeSrc": "1117:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1117:25:7"
															},
															"nativeSrc": "1117:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1117:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "971:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1041:9:7",
														"nodeType": "YulTypedName",
														"src": "1041:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1052:6:7",
														"nodeType": "YulTypedName",
														"src": "1052:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1063:4:7",
														"nodeType": "YulTypedName",
														"src": "1063:4:7",
														"type": ""
													}
												],
												"src": "971:177:7"
											},
											{
												"body": {
													"nativeSrc": "1248:92:7",
													"nodeType": "YulBlock",
													"src": "1248:92:7",
													"statements": [
														{
															"nativeSrc": "1258:26:7",
															"nodeType": "YulAssignment",
															"src": "1258:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1270:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1270:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1281:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1281:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1266:3:7"
																},
																"nativeSrc": "1266:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1266:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1258:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1300:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1300:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1325:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1325:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1318:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1318:6:7"
																				},
																				"nativeSrc": "1318:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1318:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1311:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1311:6:7"
																		},
																		"nativeSrc": "1311:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1293:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:7"
																},
																"nativeSrc": "1293:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1293:41:7"
															},
															"nativeSrc": "1293:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1293:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1153:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1217:9:7",
														"nodeType": "YulTypedName",
														"src": "1217:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1228:6:7",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1239:4:7",
														"nodeType": "YulTypedName",
														"src": "1239:4:7",
														"type": ""
													}
												],
												"src": "1153:187:7"
											},
											{
												"body": {
													"nativeSrc": "1466:697:7",
													"nodeType": "YulBlock",
													"src": "1466:697:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1512:16:7",
																"nodeType": "YulBlock",
																"src": "1512:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1521:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1521:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1524:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1524:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1514:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1514:6:7"
																			},
																			"nativeSrc": "1514:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1514:12:7"
																		},
																		"nativeSrc": "1514:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1514:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1487:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1487:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1496:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1496:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1483:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1483:3:7"
																		},
																		"nativeSrc": "1483:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1483:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1479:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:7"
																},
																"nativeSrc": "1479:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1479:32:7"
															},
															"nativeSrc": "1476:52:7",
															"nodeType": "YulIf",
															"src": "1476:52:7"
														},
														{
															"nativeSrc": "1537:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1537:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1550:1:7",
																"nodeType": "YulLiteral",
																"src": "1550:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1541:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1541:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1560:32:7",
															"nodeType": "YulAssignment",
															"src": "1560:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1569:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1569:12:7"
																},
																"nativeSrc": "1569:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1569:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1560:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1560:5:7"
																}
															]
														},
														{
															"nativeSrc": "1601:15:7",
															"nodeType": "YulAssignment",
															"src": "1601:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1611:5:7",
																"nodeType": "YulIdentifier",
																"src": "1611:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1601:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nativeSrc": "1625:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1625:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1640:1:7",
																"nodeType": "YulLiteral",
																"src": "1640:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1629:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1629:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1650:43:7",
															"nodeType": "YulAssignment",
															"src": "1650:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1678:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1678:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1689:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1689:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1674:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:7"
																		},
																		"nativeSrc": "1674:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:7"
																},
																"nativeSrc": "1661:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1661:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1650:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1650:7:7"
																}
															]
														},
														{
															"nativeSrc": "1702:17:7",
															"nodeType": "YulAssignment",
															"src": "1702:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1712:7:7",
																"nodeType": "YulIdentifier",
																"src": "1712:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1702:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:7"
																}
															]
														},
														{
															"nativeSrc": "1728:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1728:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1770:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:7"
																		},
																		"nativeSrc": "1755:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1742:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:12:7"
																},
																"nativeSrc": "1742:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1732:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1732:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1817:16:7",
																"nodeType": "YulBlock",
																"src": "1817:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1826:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1826:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1829:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1829:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1819:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:7"
																			},
																			"nativeSrc": "1819:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1819:12:7"
																		},
																		"nativeSrc": "1819:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1789:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1797:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1797:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1786:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1786:2:7"
																},
																"nativeSrc": "1786:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1786:30:7"
															},
															"nativeSrc": "1783:50:7",
															"nodeType": "YulIf",
															"src": "1783:50:7"
														},
														{
															"nativeSrc": "1842:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1842:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1856:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1856:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1867:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1867:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1852:3:7"
																},
																"nativeSrc": "1852:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1852:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1846:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1846:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1922:16:7",
																"nodeType": "YulBlock",
																"src": "1922:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1931:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1934:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1934:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1924:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			"nativeSrc": "1924:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1924:12:7"
																		},
																		"nativeSrc": "1924:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1901:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1901:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1905:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1905:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1897:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1897:3:7"
																				},
																				"nativeSrc": "1897:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1897:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1912:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1912:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1893:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1893:3:7"
																		},
																		"nativeSrc": "1893:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1886:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:7"
																},
																"nativeSrc": "1886:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1886:35:7"
															},
															"nativeSrc": "1883:55:7",
															"nodeType": "YulIf",
															"src": "1883:55:7"
														},
														{
															"nativeSrc": "1947:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1947:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1974:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1974:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1961:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1961:12:7"
																},
																"nativeSrc": "1961:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1961:16:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1951:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1951:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2020:16:7",
																"nodeType": "YulBlock",
																"src": "2020:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2029:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2032:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2022:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:7"
																			},
																			"nativeSrc": "2022:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2022:12:7"
																		},
																		"nativeSrc": "2022:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2022:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1992:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1992:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2000:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2000:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1989:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1989:2:7"
																},
																"nativeSrc": "1989:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1989:30:7"
															},
															"nativeSrc": "1986:50:7",
															"nodeType": "YulIf",
															"src": "1986:50:7"
														},
														{
															"body": {
																"nativeSrc": "2086:16:7",
																"nodeType": "YulBlock",
																"src": "2086:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2095:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2095:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2098:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2088:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2088:6:7"
																			},
																			"nativeSrc": "2088:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2088:12:7"
																		},
																		"nativeSrc": "2088:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2088:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2059:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2059:2:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2063:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2063:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2055:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2055:3:7"
																				},
																				"nativeSrc": "2055:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2055:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2072:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2072:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2051:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:7"
																		},
																		"nativeSrc": "2051:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2077:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2077:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:7"
																},
																"nativeSrc": "2048:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2048:37:7"
															},
															"nativeSrc": "2045:57:7",
															"nodeType": "YulIf",
															"src": "2045:57:7"
														},
														{
															"nativeSrc": "2111:21:7",
															"nodeType": "YulAssignment",
															"src": "2111:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2125:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "2125:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2121:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2121:3:7"
																},
																"nativeSrc": "2121:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2121:11:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2111:6:7"
																}
															]
														},
														{
															"nativeSrc": "2141:16:7",
															"nodeType": "YulAssignment",
															"src": "2141:16:7",
															"value": {
																"name": "length",
																"nativeSrc": "2151:6:7",
																"nodeType": "YulIdentifier",
																"src": "2151:6:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2141:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2141:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_bytes_calldata_ptr",
												"nativeSrc": "1345:818:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1408:9:7",
														"nodeType": "YulTypedName",
														"src": "1408:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1419:7:7",
														"nodeType": "YulTypedName",
														"src": "1419:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1431:6:7",
														"nodeType": "YulTypedName",
														"src": "1431:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1439:6:7",
														"nodeType": "YulTypedName",
														"src": "1439:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1447:6:7",
														"nodeType": "YulTypedName",
														"src": "1447:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1455:6:7",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													}
												],
												"src": "1345:818:7"
											},
											{
												"body": {
													"nativeSrc": "2342:171:7",
													"nodeType": "YulBlock",
													"src": "2342:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2359:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2359:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2370:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2370:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2352:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:7"
																},
																"nativeSrc": "2352:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2352:21:7"
															},
															"nativeSrc": "2352:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2352:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2404:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2404:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:7"
																		},
																		"nativeSrc": "2389:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2409:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2382:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2382:6:7"
																},
																"nativeSrc": "2382:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2382:30:7"
															},
															"nativeSrc": "2382:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2382:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2432:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2432:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2443:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2443:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2428:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:7"
																		},
																		"nativeSrc": "2428:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2428:18:7"
																	},
																	{
																		"hexValue": "5377617020646561646c696e652065787069726564",
																		"kind": "string",
																		"nativeSrc": "2448:23:7",
																		"nodeType": "YulLiteral",
																		"src": "2448:23:7",
																		"type": "",
																		"value": "Swap deadline expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2421:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																},
																"nativeSrc": "2421:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2421:51:7"
															},
															"nativeSrc": "2421:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2421:51:7"
														},
														{
															"nativeSrc": "2481:26:7",
															"nodeType": "YulAssignment",
															"src": "2481:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2493:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2493:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2504:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2504:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:7"
																},
																"nativeSrc": "2489:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2489:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2481:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2481:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f649e76d71df20e80337a2546c509955b4e6065141b8b9bd1833eafc7bf8c650__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2168:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2319:9:7",
														"nodeType": "YulTypedName",
														"src": "2319:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2333:4:7",
														"nodeType": "YulTypedName",
														"src": "2333:4:7",
														"type": ""
													}
												],
												"src": "2168:345:7"
											},
											{
												"body": {
													"nativeSrc": "2692:170:7",
													"nodeType": "YulBlock",
													"src": "2692:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2709:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2709:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2720:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2720:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2702:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:7"
																},
																"nativeSrc": "2702:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2702:21:7"
															},
															"nativeSrc": "2702:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2702:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2743:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2743:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2754:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2754:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2739:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:7"
																		},
																		"nativeSrc": "2739:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2732:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2732:6:7"
																},
																"nativeSrc": "2732:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2732:30:7"
															},
															"nativeSrc": "2732:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2732:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2782:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2782:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2793:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2793:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2778:3:7"
																		},
																		"nativeSrc": "2778:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2778:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420696e70757420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "2798:22:7",
																		"nodeType": "YulLiteral",
																		"src": "2798:22:7",
																		"type": "",
																		"value": "Invalid input amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2771:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:7"
																},
																"nativeSrc": "2771:50:7",
																"nodeType": "YulFunctionCall",
																"src": "2771:50:7"
															},
															"nativeSrc": "2771:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "2771:50:7"
														},
														{
															"nativeSrc": "2830:26:7",
															"nodeType": "YulAssignment",
															"src": "2830:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2842:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2842:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2853:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2853:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:7"
																},
																"nativeSrc": "2838:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2838:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2830:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2830:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2518:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2669:9:7",
														"nodeType": "YulTypedName",
														"src": "2669:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2683:4:7",
														"nodeType": "YulTypedName",
														"src": "2683:4:7",
														"type": ""
													}
												],
												"src": "2518:344:7"
											},
											{
												"body": {
													"nativeSrc": "2996:145:7",
													"nodeType": "YulBlock",
													"src": "2996:145:7",
													"statements": [
														{
															"nativeSrc": "3006:26:7",
															"nodeType": "YulAssignment",
															"src": "3006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3018:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3018:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3029:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3029:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3014:3:7"
																},
																"nativeSrc": "3014:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3006:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3048:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3048:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3063:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3079:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3079:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3084:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3084:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3075:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3075:3:7"
																						},
																						"nativeSrc": "3075:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3075:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3088:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3088:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3071:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:7"
																				},
																				"nativeSrc": "3071:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3071:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:7"
																		},
																		"nativeSrc": "3059:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3059:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3041:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3041:6:7"
																},
																"nativeSrc": "3041:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3041:51:7"
															},
															"nativeSrc": "3041:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3041:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3112:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3123:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:7"
																		},
																		"nativeSrc": "3108:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3128:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3128:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3101:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:7"
																},
																"nativeSrc": "3101:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3101:34:7"
															},
															"nativeSrc": "3101:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3101:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2867:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2957:9:7",
														"nodeType": "YulTypedName",
														"src": "2957:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2968:6:7",
														"nodeType": "YulTypedName",
														"src": "2968:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2976:6:7",
														"nodeType": "YulTypedName",
														"src": "2976:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2987:4:7",
														"nodeType": "YulTypedName",
														"src": "2987:4:7",
														"type": ""
													}
												],
												"src": "2867:274:7"
											},
											{
												"body": {
													"nativeSrc": "3224:199:7",
													"nodeType": "YulBlock",
													"src": "3224:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3270:16:7",
																"nodeType": "YulBlock",
																"src": "3270:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3279:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3279:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3282:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3282:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3272:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3272:6:7"
																			},
																			"nativeSrc": "3272:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3272:12:7"
																		},
																		"nativeSrc": "3272:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3272:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3245:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3245:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3254:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3241:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:7"
																		},
																		"nativeSrc": "3241:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3241:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3266:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3266:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3237:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:7"
																},
																"nativeSrc": "3237:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3237:32:7"
															},
															"nativeSrc": "3234:52:7",
															"nodeType": "YulIf",
															"src": "3234:52:7"
														},
														{
															"nativeSrc": "3295:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3295:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3314:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3308:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3308:5:7"
																},
																"nativeSrc": "3308:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3308:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3299:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3299:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3377:16:7",
																"nodeType": "YulBlock",
																"src": "3377:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3386:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3386:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3389:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3389:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3379:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:7"
																			},
																			"nativeSrc": "3379:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3379:12:7"
																		},
																		"nativeSrc": "3379:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3379:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3346:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3367:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "3367:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3360:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3360:6:7"
																						},
																						"nativeSrc": "3360:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3360:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3353:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3353:6:7"
																				},
																				"nativeSrc": "3353:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3353:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3343:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3343:2:7"
																		},
																		"nativeSrc": "3343:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3343:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:7"
																},
																"nativeSrc": "3336:40:7",
																"nodeType": "YulFunctionCall",
																"src": "3336:40:7"
															},
															"nativeSrc": "3333:60:7",
															"nodeType": "YulIf",
															"src": "3333:60:7"
														},
														{
															"nativeSrc": "3402:15:7",
															"nodeType": "YulAssignment",
															"src": "3402:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3412:5:7",
																"nodeType": "YulIdentifier",
																"src": "3412:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3146:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3190:9:7",
														"nodeType": "YulTypedName",
														"src": "3190:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3201:7:7",
														"nodeType": "YulTypedName",
														"src": "3201:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3213:6:7",
														"nodeType": "YulTypedName",
														"src": "3213:6:7",
														"type": ""
													}
												],
												"src": "3146:277:7"
											},
											{
												"body": {
													"nativeSrc": "3651:543:7",
													"nodeType": "YulBlock",
													"src": "3651:543:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3668:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3668:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3683:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3683:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3699:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3699:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3704:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3704:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3695:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:7"
																						},
																						"nativeSrc": "3695:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3695:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3708:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3708:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3691:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:7"
																				},
																				"nativeSrc": "3691:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3691:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3679:3:7"
																		},
																		"nativeSrc": "3679:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3679:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:7"
																},
																"nativeSrc": "3661:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3661:51:7"
															},
															"nativeSrc": "3661:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3661:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3732:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3732:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3743:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3743:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3728:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3728:3:7"
																		},
																		"nativeSrc": "3728:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3728:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "3762:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3762:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3755:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3755:6:7"
																				},
																				"nativeSrc": "3755:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3755:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3748:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3748:6:7"
																		},
																		"nativeSrc": "3748:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3748:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3721:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3721:6:7"
																},
																"nativeSrc": "3721:50:7",
																"nodeType": "YulFunctionCall",
																"src": "3721:50:7"
															},
															"nativeSrc": "3721:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "3721:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3791:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3802:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3802:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:7"
																		},
																		"nativeSrc": "3787:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3807:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3807:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3780:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:7"
																},
																"nativeSrc": "3780:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3780:34:7"
															},
															"nativeSrc": "3780:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3780:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3834:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3834:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3845:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3845:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3830:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:7"
																		},
																		"nativeSrc": "3830:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3830:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "3854:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3854:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3870:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3870:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3875:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3875:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3866:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3866:3:7"
																						},
																						"nativeSrc": "3866:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3866:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3879:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3879:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3862:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3862:3:7"
																				},
																				"nativeSrc": "3862:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3862:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3850:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3850:3:7"
																		},
																		"nativeSrc": "3850:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3850:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:7"
																},
																"nativeSrc": "3823:60:7",
																"nodeType": "YulFunctionCall",
																"src": "3823:60:7"
															},
															"nativeSrc": "3823:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "3823:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3903:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3903:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3914:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3914:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3899:3:7"
																		},
																		"nativeSrc": "3899:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3899:19:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3920:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3920:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:7"
																},
																"nativeSrc": "3892:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3892:32:7"
															},
															"nativeSrc": "3892:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "3892:32:7"
														},
														{
															"nativeSrc": "3933:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3933:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3953:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3953:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3947:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3947:5:7"
																},
																"nativeSrc": "3947:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3947:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3937:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3937:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3980:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3980:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3991:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3991:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3976:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3976:3:7"
																		},
																		"nativeSrc": "3976:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:19:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3997:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3997:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3969:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:7"
																},
																"nativeSrc": "3969:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3969:35:7"
															},
															"nativeSrc": "3969:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "3969:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4023:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4034:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4034:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4019:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:7"
																		},
																		"nativeSrc": "4019:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4019:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "4044:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4044:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4052:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4040:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:7"
																		},
																		"nativeSrc": "4040:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4040:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4057:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4057:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4013:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4013:5:7"
																},
																"nativeSrc": "4013:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4013:51:7"
															},
															"nativeSrc": "4013:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4013:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4088:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4088:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4099:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4099:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4084:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4084:3:7"
																				},
																				"nativeSrc": "4084:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4084:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4108:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4108:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:7"
																		},
																		"nativeSrc": "4080:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4080:32:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4114:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4073:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:7"
																},
																"nativeSrc": "4073:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4073:43:7"
															},
															"nativeSrc": "4073:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "4073:43:7"
														},
														{
															"nativeSrc": "4125:63:7",
															"nodeType": "YulAssignment",
															"src": "4125:63:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4141:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4141:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4160:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "4160:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4168:2:7",
																								"nodeType": "YulLiteral",
																								"src": "4168:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4156:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4156:3:7"
																						},
																						"nativeSrc": "4156:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4156:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4177:2:7",
																								"nodeType": "YulLiteral",
																								"src": "4177:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4173:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4173:3:7"
																						},
																						"nativeSrc": "4173:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4173:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4152:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4152:3:7"
																				},
																				"nativeSrc": "4152:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4152:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4137:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4137:3:7"
																		},
																		"nativeSrc": "4137:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4137:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4184:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4184:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4133:3:7"
																},
																"nativeSrc": "4133:55:7",
																"nodeType": "YulFunctionCall",
																"src": "4133:55:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4125:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "3428:766:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3588:9:7",
														"nodeType": "YulTypedName",
														"src": "3588:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3599:6:7",
														"nodeType": "YulTypedName",
														"src": "3599:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3607:6:7",
														"nodeType": "YulTypedName",
														"src": "3607:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3615:6:7",
														"nodeType": "YulTypedName",
														"src": "3615:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3623:6:7",
														"nodeType": "YulTypedName",
														"src": "3623:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3631:6:7",
														"nodeType": "YulTypedName",
														"src": "3631:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3642:4:7",
														"nodeType": "YulTypedName",
														"src": "3642:4:7",
														"type": ""
													}
												],
												"src": "3428:766:7"
											},
											{
												"body": {
													"nativeSrc": "4295:245:7",
													"nodeType": "YulBlock",
													"src": "4295:245:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4341:16:7",
																"nodeType": "YulBlock",
																"src": "4341:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4350:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4350:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4353:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4353:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4343:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4343:6:7"
																			},
																			"nativeSrc": "4343:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4343:12:7"
																		},
																		"nativeSrc": "4343:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4316:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4316:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4325:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:7"
																		},
																		"nativeSrc": "4312:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4312:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4337:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4337:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:7"
																},
																"nativeSrc": "4308:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4308:32:7"
															},
															"nativeSrc": "4305:52:7",
															"nodeType": "YulIf",
															"src": "4305:52:7"
														},
														{
															"nativeSrc": "4366:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4366:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4379:1:7",
																"nodeType": "YulLiteral",
																"src": "4379:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4370:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4370:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4389:25:7",
															"nodeType": "YulAssignment",
															"src": "4389:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4404:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4404:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4398:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4398:5:7"
																},
																"nativeSrc": "4398:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4398:16:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4389:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4389:5:7"
																}
															]
														},
														{
															"nativeSrc": "4423:15:7",
															"nodeType": "YulAssignment",
															"src": "4423:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4433:5:7",
																"nodeType": "YulIdentifier",
																"src": "4433:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4423:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4423:6:7"
																}
															]
														},
														{
															"nativeSrc": "4447:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4447:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4462:1:7",
																"nodeType": "YulLiteral",
																"src": "4462:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4451:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4451:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4472:36:7",
															"nodeType": "YulAssignment",
															"src": "4472:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4493:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4504:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4504:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4489:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:7"
																		},
																		"nativeSrc": "4489:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4489:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4483:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4483:5:7"
																},
																"nativeSrc": "4483:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4483:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4472:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4472:7:7"
																}
															]
														},
														{
															"nativeSrc": "4517:17:7",
															"nodeType": "YulAssignment",
															"src": "4517:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "4527:7:7",
																"nodeType": "YulIdentifier",
																"src": "4527:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4517:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256_fromMemory",
												"nativeSrc": "4199:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4253:9:7",
														"nodeType": "YulTypedName",
														"src": "4253:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4264:7:7",
														"nodeType": "YulTypedName",
														"src": "4264:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4276:6:7",
														"nodeType": "YulTypedName",
														"src": "4276:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4284:6:7",
														"nodeType": "YulTypedName",
														"src": "4284:6:7",
														"type": ""
													}
												],
												"src": "4199:341:7"
											},
											{
												"body": {
													"nativeSrc": "4588:190:7",
													"nodeType": "YulBlock",
													"src": "4588:190:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4632:111:7",
																"nodeType": "YulBlock",
																"src": "4632:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4660:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4660:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4665:10:7",
																							"nodeType": "YulLiteral",
																							"src": "4665:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4656:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4656:3:7"
																					},
																					"nativeSrc": "4656:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4656:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4646:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:7"
																			},
																			"nativeSrc": "4646:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4646:31:7"
																		},
																		"nativeSrc": "4646:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4697:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4700:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4700:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4690:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4690:6:7"
																			},
																			"nativeSrc": "4690:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4690:15:7"
																		},
																		"nativeSrc": "4690:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4725:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4725:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4728:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4728:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4718:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4718:6:7"
																			},
																			"nativeSrc": "4718:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4718:15:7"
																		},
																		"nativeSrc": "4718:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4718:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4604:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4604:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4615:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4615:3:7",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4620:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4620:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:7"
																		},
																		"nativeSrc": "4611:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:11:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4601:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4601:2:7"
																},
																"nativeSrc": "4601:22:7",
																"nodeType": "YulFunctionCall",
																"src": "4601:22:7"
															},
															"nativeSrc": "4598:145:7",
															"nodeType": "YulIf",
															"src": "4598:145:7"
														},
														{
															"nativeSrc": "4752:20:7",
															"nodeType": "YulAssignment",
															"src": "4752:20:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4763:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4763:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4766:5:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4759:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4759:3:7"
																},
																"nativeSrc": "4759:13:7",
																"nodeType": "YulFunctionCall",
																"src": "4759:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4752:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:7"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "4545:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:7",
														"nodeType": "YulTypedName",
														"src": "4570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4580:3:7",
														"nodeType": "YulTypedName",
														"src": "4580:3:7",
														"type": ""
													}
												],
												"src": "4545:233:7"
											},
											{
												"body": {
													"nativeSrc": "4957:176:7",
													"nodeType": "YulBlock",
													"src": "4957:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4974:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4974:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4985:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4967:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:7"
																},
																"nativeSrc": "4967:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4967:21:7"
															},
															"nativeSrc": "4967:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4967:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5008:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5008:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5019:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5019:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5004:3:7"
																		},
																		"nativeSrc": "5004:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5004:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5024:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4997:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4997:6:7"
																},
																"nativeSrc": "4997:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4997:30:7"
															},
															"nativeSrc": "4997:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4997:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5047:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5058:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5058:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:7"
																		},
																		"nativeSrc": "5043:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5043:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "5063:28:7",
																		"nodeType": "YulLiteral",
																		"src": "5063:28:7",
																		"type": "",
																		"value": "Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5036:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:7"
																},
																"nativeSrc": "5036:56:7",
																"nodeType": "YulFunctionCall",
																"src": "5036:56:7"
															},
															"nativeSrc": "5036:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "5036:56:7"
														},
														{
															"nativeSrc": "5101:26:7",
															"nodeType": "YulAssignment",
															"src": "5101:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5113:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5113:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5124:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5124:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5109:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5109:3:7"
																},
																"nativeSrc": "5109:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5109:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5101:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5101:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4783:350:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4934:9:7",
														"nodeType": "YulTypedName",
														"src": "4934:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4948:4:7",
														"nodeType": "YulTypedName",
														"src": "4948:4:7",
														"type": ""
													}
												],
												"src": "4783:350:7"
											},
											{
												"body": {
													"nativeSrc": "5267:119:7",
													"nodeType": "YulBlock",
													"src": "5267:119:7",
													"statements": [
														{
															"nativeSrc": "5277:26:7",
															"nodeType": "YulAssignment",
															"src": "5277:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5289:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5289:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5300:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5285:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5285:3:7"
																},
																"nativeSrc": "5285:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5285:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5277:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5277:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5319:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5319:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5330:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5330:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5312:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:7"
																},
																"nativeSrc": "5312:25:7",
																"nodeType": "YulFunctionCall",
																"src": "5312:25:7"
															},
															"nativeSrc": "5312:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "5312:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5357:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5357:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5368:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5368:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5353:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5353:3:7"
																		},
																		"nativeSrc": "5353:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5373:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:7"
																},
																"nativeSrc": "5346:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5346:34:7"
															},
															"nativeSrc": "5346:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5346:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5138:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5228:9:7",
														"nodeType": "YulTypedName",
														"src": "5228:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5239:6:7",
														"nodeType": "YulTypedName",
														"src": "5239:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5247:6:7",
														"nodeType": "YulTypedName",
														"src": "5247:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5258:4:7",
														"nodeType": "YulTypedName",
														"src": "5258:4:7",
														"type": ""
													}
												],
												"src": "5138:248:7"
											},
											{
												"body": {
													"nativeSrc": "5565:164:7",
													"nodeType": "YulBlock",
													"src": "5565:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5582:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5582:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5593:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5593:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5575:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:7"
																},
																"nativeSrc": "5575:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5575:21:7"
															},
															"nativeSrc": "5575:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5575:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5616:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5616:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5627:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5627:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5612:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:7"
																		},
																		"nativeSrc": "5612:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5632:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5632:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5605:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:7"
																},
																"nativeSrc": "5605:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5605:30:7"
															},
															"nativeSrc": "5605:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5605:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5655:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5655:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5666:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5666:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5651:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5651:3:7"
																		},
																		"nativeSrc": "5651:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5651:18:7"
																	},
																	{
																		"hexValue": "496e76616c69642063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "5671:16:7",
																		"nodeType": "YulLiteral",
																		"src": "5671:16:7",
																		"type": "",
																		"value": "Invalid caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5644:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5644:6:7"
																},
																"nativeSrc": "5644:44:7",
																"nodeType": "YulFunctionCall",
																"src": "5644:44:7"
															},
															"nativeSrc": "5644:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "5644:44:7"
														},
														{
															"nativeSrc": "5697:26:7",
															"nodeType": "YulAssignment",
															"src": "5697:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5709:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5709:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5720:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5720:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5705:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5705:3:7"
																},
																"nativeSrc": "5705:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5705:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5697:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5697:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5391:338:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5542:9:7",
														"nodeType": "YulTypedName",
														"src": "5542:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5556:4:7",
														"nodeType": "YulTypedName",
														"src": "5556:4:7",
														"type": ""
													}
												],
												"src": "5391:338:7"
											},
											{
												"body": {
													"nativeSrc": "5829:280:7",
													"nodeType": "YulBlock",
													"src": "5829:280:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5875:16:7",
																"nodeType": "YulBlock",
																"src": "5875:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5884:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5884:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5887:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5887:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5877:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5877:6:7"
																			},
																			"nativeSrc": "5877:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5877:12:7"
																		},
																		"nativeSrc": "5877:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5877:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5850:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5850:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5859:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5859:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5846:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5846:3:7"
																		},
																		"nativeSrc": "5846:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5846:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5871:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5871:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5842:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5842:3:7"
																},
																"nativeSrc": "5842:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5842:32:7"
															},
															"nativeSrc": "5839:52:7",
															"nodeType": "YulIf",
															"src": "5839:52:7"
														},
														{
															"nativeSrc": "5900:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5900:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5926:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5926:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5913:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5913:12:7"
																},
																"nativeSrc": "5913:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5913:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5904:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5904:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5970:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5970:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint160",
																	"nativeSrc": "5945:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5945:24:7"
																},
																"nativeSrc": "5945:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5945:31:7"
															},
															"nativeSrc": "5945:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5945:31:7"
														},
														{
															"nativeSrc": "5985:15:7",
															"nodeType": "YulAssignment",
															"src": "5985:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5995:5:7",
																"nodeType": "YulIdentifier",
																"src": "5995:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5985:6:7"
																}
															]
														},
														{
															"nativeSrc": "6009:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6009:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6024:1:7",
																"nodeType": "YulLiteral",
																"src": "6024:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6013:7:7",
																	"nodeType": "YulTypedName",
																	"src": "6013:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6034:43:7",
															"nodeType": "YulAssignment",
															"src": "6034:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6062:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6073:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6073:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6058:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:7"
																		},
																		"nativeSrc": "6058:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6058:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6045:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6045:12:7"
																},
																"nativeSrc": "6045:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6045:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "6034:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6034:7:7"
																}
															]
														},
														{
															"nativeSrc": "6086:17:7",
															"nodeType": "YulAssignment",
															"src": "6086:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "6096:7:7",
																"nodeType": "YulIdentifier",
																"src": "6096:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6086:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "5734:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5787:9:7",
														"nodeType": "YulTypedName",
														"src": "5787:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5798:7:7",
														"nodeType": "YulTypedName",
														"src": "5798:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5810:6:7",
														"nodeType": "YulTypedName",
														"src": "5810:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5818:6:7",
														"nodeType": "YulTypedName",
														"src": "5818:6:7",
														"type": ""
													}
												],
												"src": "5734:375:7"
											},
											{
												"body": {
													"nativeSrc": "6288:170:7",
													"nodeType": "YulBlock",
													"src": "6288:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6305:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6305:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6298:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:7"
																},
																"nativeSrc": "6298:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6298:21:7"
															},
															"nativeSrc": "6298:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6298:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6339:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6339:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6350:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6350:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6335:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6335:3:7"
																		},
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6335:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6355:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6328:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6328:6:7"
																},
																"nativeSrc": "6328:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6328:30:7"
															},
															"nativeSrc": "6328:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6328:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6389:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6389:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6374:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6374:3:7"
																		},
																		"nativeSrc": "6374:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6374:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e743044656c7461",
																		"kind": "string",
																		"nativeSrc": "6394:22:7",
																		"nodeType": "YulLiteral",
																		"src": "6394:22:7",
																		"type": "",
																		"value": "Invalid amount0Delta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6367:6:7"
																},
																"nativeSrc": "6367:50:7",
																"nodeType": "YulFunctionCall",
																"src": "6367:50:7"
															},
															"nativeSrc": "6367:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "6367:50:7"
														},
														{
															"nativeSrc": "6426:26:7",
															"nodeType": "YulAssignment",
															"src": "6426:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6438:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6438:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6434:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6434:3:7"
																},
																"nativeSrc": "6434:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6434:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6426:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6426:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6114:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6265:9:7",
														"nodeType": "YulTypedName",
														"src": "6265:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6279:4:7",
														"nodeType": "YulTypedName",
														"src": "6279:4:7",
														"type": ""
													}
												],
												"src": "6114:344:7"
											},
											{
												"body": {
													"nativeSrc": "6637:170:7",
													"nodeType": "YulBlock",
													"src": "6637:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6654:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6654:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6665:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6647:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6647:6:7"
																},
																"nativeSrc": "6647:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6647:21:7"
															},
															"nativeSrc": "6647:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6647:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6688:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6699:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6699:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6684:3:7"
																		},
																		"nativeSrc": "6684:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6684:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6704:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:7"
																},
																"nativeSrc": "6677:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6677:30:7"
															},
															"nativeSrc": "6677:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6677:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6738:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6738:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6723:3:7"
																		},
																		"nativeSrc": "6723:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6723:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e743144656c7461",
																		"kind": "string",
																		"nativeSrc": "6743:22:7",
																		"nodeType": "YulLiteral",
																		"src": "6743:22:7",
																		"type": "",
																		"value": "Invalid amount1Delta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6716:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6716:6:7"
																},
																"nativeSrc": "6716:50:7",
																"nodeType": "YulFunctionCall",
																"src": "6716:50:7"
															},
															"nativeSrc": "6716:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "6716:50:7"
														},
														{
															"nativeSrc": "6775:26:7",
															"nodeType": "YulAssignment",
															"src": "6775:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6787:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6787:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6783:3:7"
																},
																"nativeSrc": "6783:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6783:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6775:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6775:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6463:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6614:9:7",
														"nodeType": "YulTypedName",
														"src": "6614:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6628:4:7",
														"nodeType": "YulTypedName",
														"src": "6628:4:7",
														"type": ""
													}
												],
												"src": "6463:344:7"
											},
											{
												"body": {
													"nativeSrc": "6969:214:7",
													"nodeType": "YulBlock",
													"src": "6969:214:7",
													"statements": [
														{
															"nativeSrc": "6979:26:7",
															"nodeType": "YulAssignment",
															"src": "6979:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6991:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6991:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7002:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:7"
																},
																"nativeSrc": "6987:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6987:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6979:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6979:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7021:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7021:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7036:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7036:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7052:3:7",
																								"nodeType": "YulLiteral",
																								"src": "7052:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7057:1:7",
																								"nodeType": "YulLiteral",
																								"src": "7057:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7048:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7048:3:7"
																						},
																						"nativeSrc": "7048:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7048:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7061:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7061:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7044:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7044:3:7"
																				},
																				"nativeSrc": "7044:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7044:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7032:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7032:3:7"
																		},
																		"nativeSrc": "7032:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7032:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7014:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:7"
																},
																"nativeSrc": "7014:51:7",
																"nodeType": "YulFunctionCall",
																"src": "7014:51:7"
															},
															"nativeSrc": "7014:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "7014:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7085:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7085:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7096:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7096:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7081:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:7"
																		},
																		"nativeSrc": "7081:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7081:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7105:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7121:3:7",
																								"nodeType": "YulLiteral",
																								"src": "7121:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7126:1:7",
																								"nodeType": "YulLiteral",
																								"src": "7126:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7117:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7117:3:7"
																						},
																						"nativeSrc": "7117:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7117:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7130:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7130:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7113:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7113:3:7"
																				},
																				"nativeSrc": "7113:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7101:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:7"
																		},
																		"nativeSrc": "7101:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7101:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:7"
																},
																"nativeSrc": "7074:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7074:60:7"
															},
															"nativeSrc": "7074:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "7074:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7154:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7154:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7165:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7165:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:7"
																		},
																		"nativeSrc": "7150:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7170:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:7"
																},
																"nativeSrc": "7143:34:7",
																"nodeType": "YulFunctionCall",
																"src": "7143:34:7"
															},
															"nativeSrc": "7143:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "7143:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6812:371:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6922:9:7",
														"nodeType": "YulTypedName",
														"src": "6922:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6933:6:7",
														"nodeType": "YulTypedName",
														"src": "6933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6941:6:7",
														"nodeType": "YulTypedName",
														"src": "6941:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6949:6:7",
														"nodeType": "YulTypedName",
														"src": "6949:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6960:4:7",
														"nodeType": "YulTypedName",
														"src": "6960:4:7",
														"type": ""
													}
												],
												"src": "6812:371:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_uint160(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint160(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_uint160(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_int256t_int256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_1, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_stringliteral_f649e76d71df20e80337a2546c509955b4e6065141b8b9bd1833eafc7bf8c650__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Swap deadline expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid input amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), 160)\n        let length := mload(value4)\n        mstore(add(headStart, 160), length)\n        mcopy(add(headStart, 192), add(value4, 32), length)\n        mstore(add(add(headStart, length), 192), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 192)\n    }\n    function abi_decode_tuple_t_int256t_int256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := sub(0, value)\n    }\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient output amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint160(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid amount0Delta\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid amount1Delta\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"671": [
									{
										"length": 32,
										"start": 105
									},
									{
										"length": 32,
										"start": 534
									},
									{
										"length": 32,
										"start": 732
									},
									{
										"length": 32,
										"start": 1146
									},
									{
										"length": 32,
										"start": 1649
									}
								],
								"679": [
									{
										"length": 32,
										"start": 260
									},
									{
										"length": 32,
										"start": 779
									},
									{
										"length": 32,
										"start": 894
									},
									{
										"length": 32,
										"start": 1262
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610060575f3560e01c806316f0115b1461006457806377fc0617146100a857806389a30271146100c9578063a0eeb39a146100e4578063b25b6bd7146100ff578063fa461e3314610136575b5f5ffd5b61008b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bb6100b63660046107c6565b61014b565b60405190815260200161009f565b61008b730b2c639c533813f4aa9d7837caf62653d097ff8581565b61008b739560e827af36c94d2ac33a39bce1fe78631088db81565b6101267f000000000000000000000000000000000000000000000000000000000000000081565b604051901515815260200161009f565b610149610144366004610804565b61046f565b005b5f428310156101995760405162461bcd60e51b815260206004820152601560248201527414ddd85c08191958591b1a5b9948195e1c1a5c9959605a1b60448201526064015b60405180910390fd5b5f85116101df5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b6044820152606401610190565b6101ff730b2c639c533813f4aa9d7837caf62653d097ff853330886106a0565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101869052730b2c639c533813f4aa9d7837caf62653d097ff859063095ea7b3906044016020604051808303815f875af115801561027d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a19190610880565b50604080513360208201528082018690528151808203830181526060820192839052630251596160e31b9092525f9081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063128acb08906103399030907f0000000000000000000000000000000000000000000000000000000000000000908d908b908a906064016108a6565b60408051808303815f875af1158015610354573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103789190610909565b915091507f00000000000000000000000000000000000000000000000000000000000000006103af576103aa8261092b565b6103b8565b6103b88161092b565b93508684101561040a5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610190565b610429739560e827af36c94d2ac33a39bce1fe78631088db338661070d565b604080518981526020810186905233917f2d043ce009ff53fd444b0f4f5ff4c3f4ee293265203f77f156eeb33b595dfc4f910160405180910390a2505050949350505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104d85760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606401610190565b5f806104e683850185610951565b915091505f5f7f0000000000000000000000000000000000000000000000000000000000000000156105bc575f88136105585760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743044656c746160601b6044820152606401610190565b5f871261059e5760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743144656c746160601b6044820152606401610190565b50869050730b2c639c533813f4aa9d7837caf62653d097ff85610662565b5f87136106025760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743144656c746160601b6044820152606401610190565b5f88126106485760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616d6f756e743044656c746160601b6044820152606401610190565b50859050739560e827af36c94d2ac33a39bce1fe78631088db5b6106966001600160a01b0382167f00000000000000000000000000000000000000000000000000000000000000008461070d565b5050505050505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107079186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610743565b50505050565b6040516001600160a01b0383811660248301526044820183905261073e91859182169063a9059cbb906064016106d5565b505050565b5f5f60205f8451602086015f885af180610762576040513d5f823e3d81fd5b50505f513d91508115610779578060011415610786565b6001600160a01b0384163b155b1561070757604051635274afe760e01b81526001600160a01b0385166004820152602401610190565b6001600160a01b03811681146107c3575f5ffd5b50565b5f5f5f5f608085870312156107d9575f5ffd5b84359350602085013592506040850135915060608501356107f9816107af565b939692955090935050565b5f5f5f5f60608587031215610817575f5ffd5b8435935060208501359250604085013567ffffffffffffffff81111561083b575f5ffd5b8501601f8101871361084b575f5ffd5b803567ffffffffffffffff811115610861575f5ffd5b876020828401011115610872575f5ffd5b949793965060200194505050565b5f60208284031215610890575f5ffd5b8151801515811461089f575f5ffd5b9392505050565b60018060a01b0386168152841515602082015283604082015260018060a01b038316606082015260a060808201525f82518060a0840152806020850160c085015e5f60c0828501015260c0601f19601f8301168401019150509695505050505050565b5f5f6040838503121561091a575f5ffd5b505080516020909101519092909150565b5f600160ff1b820161094b57634e487b7160e01b5f52601160045260245ffd5b505f0390565b5f5f60408385031215610962575f5ffd5b823561096d816107af565b94602093909301359350505056fea26469706673582212201c7f899d8cdbf26dd0ffe83f580438f626a1ee03a9005d7242036c0b48aa259964736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x77FC0617 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xA0EEB39A EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xB25B6BD7 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x8B PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 DUP2 JUMP JUMPDEST PUSH2 0x8B PUSH20 0x9560E827AF36C94D2AC33A39BCE1FE78631088DB DUP2 JUMP JUMPDEST PUSH2 0x126 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH0 TIMESTAMP DUP4 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DDD85C08191958591B1A5B9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081A5B9C1D5D08185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x1FF PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 CALLER ADDRESS DUP9 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x2515961 PUSH1 0xE3 SHL SWAP1 SWAP3 MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x128ACB08 SWAP1 PUSH2 0x339 SWAP1 ADDRESS SWAP1 PUSH32 0x0 SWAP1 DUP14 SWAP1 DUP12 SWAP1 DUP11 SWAP1 PUSH1 0x64 ADD PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH32 0x0 PUSH2 0x3AF JUMPI PUSH2 0x3AA DUP3 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x3B8 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP4 POP DUP7 DUP5 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x429 PUSH20 0x9560E827AF36C94D2AC33A39BCE1FE78631088DB CALLER DUP7 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x2D043CE009FF53FD444B0F4F5FF4C3F4EE293265203F77F156EEB33B595DFC4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B21031B0B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E6 DUP4 DUP6 ADD DUP6 PUSH2 0x951 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH0 PUSH32 0x0 ISZERO PUSH2 0x5BC JUMPI PUSH0 DUP9 SGT PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743044656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP8 SLT PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743144656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST POP DUP7 SWAP1 POP PUSH20 0xB2C639C533813F4AA9D7837CAF62653D097FF85 PUSH2 0x662 JUMP JUMPDEST PUSH0 DUP8 SGT PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743144656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 DUP9 SLT PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616D6F756E743044656C7461 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST POP DUP6 SWAP1 POP PUSH20 0x9560E827AF36C94D2AC33A39BCE1FE78631088DB JUMPDEST PUSH2 0x696 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x0 DUP5 PUSH2 0x70D JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x707 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x743 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x73E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x6D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x779 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x7F9 DUP2 PUSH2 0x7AF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x84B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x861 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x872 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x890 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x89F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0xA0 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0xC0 DUP6 ADD MCOPY PUSH0 PUSH1 0xC0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x94B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 SUB SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x962 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x96D DUP2 PUSH2 0x7AF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR PUSH32 0x899D8CDBF26DD0FFE83F580438F626A1EE03A9005D7242036C0B48AA25996473 PUSH16 0x6C634300081D00330000000000000000 ",
							"sourceMap": "521:4199:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:29;;;;;;;;-1:-1:-1;;;;;178:32:7;;;160:51;;148:2;133:18;587:29:6;;;;;;;;1588:1582;;;;;;:::i;:::-;;:::i;:::-;;;1117:25:7;;;1105:2;1090:18;1588:1582:6;971:177:7;649:73:6;;680:42;649:73;;749;;780:42;749:73;;849:32;;;;;;;;1318:14:7;;1311:22;1293:41;;1281:2;1266:18;849:32:6;1153:187:7;3506:1211:6;;;;;;:::i;:::-;;:::i;:::-;;1588:1582;1768:17;1863:15;1851:8;:27;;1843:61;;;;-1:-1:-1;;;1843:61:6;;2370:2:7;1843:61:6;;;2352:21:7;2409:2;2389:18;;;2382:30;-1:-1:-1;;;2428:18:7;;;2421:51;2489:18;;1843:61:6;;;;;;;;;1934:1;1923:8;:12;1915:45;;;;-1:-1:-1;;;1915:45:6;;2720:2:7;1915:45:6;;;2702:21:7;2759:2;2739:18;;;2732:30;-1:-1:-1;;;2778:18:7;;;2771:50;2838:18;;1915:45:6;2518:344:7;1915:45:6;2016:66;680:42;2046:10;2066:4;2073:8;2016:29;:66::i;:::-;2093:36;;-1:-1:-1;;;2093:36:6;;-1:-1:-1;;;;;2114:4:6;3059:32:7;2093:36:6;;;3041:51:7;3108:18;;;3101:34;;;680:42:6;;2093:20;;3014:18:7;;2093:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2212:40:6;;;2223:10;2212:40;;;3041:51:7;3108:18;;;3101:34;;;2212:40:6;;;;;;;;;3014:18:7;;;2212:40:6;;;;-1:-1:-1;;;2342:354:6;;;-1:-1:-1;;;;;;;;;2357:4:6;2342:25;;;;:354;;2390:4;;2456:10;;2540:8;;2592:17;;2212:40;;2342:354;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2307:389;;;;2774:10;:50;;2815:8;2816:7;2815:8;:::i;:::-;2774:50;;;2795:8;2796:7;2795:8;:::i;:::-;2762:62;;2899:16;2886:9;:29;;2878:68;;;;-1:-1:-1;;;2878:68:6;;4985:2:7;2878:68:6;;;4967:21:7;5024:2;5004:18;;;4997:30;5063:28;5043:18;;;5036:56;5109:18;;2878:68:6;4783:350:7;2878:68:6;2999:48;780:42;3025:10;3037:9;2999:25;:48::i;:::-;3088:45;;;5312:25:7;;;5368:2;5353:18;;5346:34;;;3101:10:6;;3088:45;;5285:18:7;3088:45:6;;;;;;;3146:16;;;1588:1582;;;;;;:::o;3506:1211::-;3704:10;-1:-1:-1;;;;;3718:4:6;3704:18;;3696:45;;;;-1:-1:-1;;;3696:45:6;;5593:2:7;3696:45:6;;;5575:21:7;5632:2;5612:18;;;5605:30;-1:-1:-1;;;5651:18:7;;;5644:44;5705:18;;3696:45:6;5391:338:7;3696:45:6;3779:17;;3826:36;;;;3837:4;3826:36;:::i;:::-;3778:84;;;;3922:19;3952:18;3987:10;3983:614;;;4111:1;4096:12;:16;4088:49;;;;-1:-1:-1;;;4088:49:6;;6316:2:7;4088:49:6;;;6298:21:7;6355:2;6335:18;;;6328:30;-1:-1:-1;;;6374:18:7;;;6367:50;6434:18;;4088:49:6;6114:344:7;4088:49:6;4175:1;4160:12;:16;4152:49;;;;-1:-1:-1;;;4152:49:6;;6665:2:7;4152:49:6;;;6647:21:7;6704:2;6684:18;;;6677:30;-1:-1:-1;;;6723:18:7;;;6716:50;6783:18;;4152:49:6;6463:344:7;4152:49:6;-1:-1:-1;4238:12:6;;-1:-1:-1;680:42:6;3983:614;;;4413:1;4398:12;:16;4390:49;;;;-1:-1:-1;;;4390:49:6;;6665:2:7;4390:49:6;;;6647:21:7;6704:2;6684:18;;;6677:30;-1:-1:-1;;;6723:18:7;;;6716:50;6783:18;;4390:49:6;6463:344:7;4390:49:6;4477:1;4462:12;:16;4454:49;;;;-1:-1:-1;;;4454:49:6;;6316:2:7;4454:49:6;;;6298:21:7;6355:2;6335:18;;;6328:30;-1:-1:-1;;;6374:18:7;;;6367:50;6434:18;;4454:49:6;6114:344:7;4454:49:6;-1:-1:-1;4540:12:6;;-1:-1:-1;780:42:6;3983:614;4659:50;-1:-1:-1;;;;;4659:31:6;;4691:4;4697:11;4659:31;:50::i;:::-;3643:1074;;;;3506:1211;;;;:::o;1618:188:4:-;1745:53;;-1:-1:-1;;;;;7032:32:7;;;1745:53:4;;;7014:51:7;7101:32;;;7081:18;;;7074:60;7150:18;;;7143:34;;;1718:81:4;;1738:5;;1760:18;;;;;6987::7;;1745:53:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:53:4;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1219:160::-;1328:43;;-1:-1:-1;;;;;3059:32:7;;;1328:43:4;;;3041:51:7;3108:18;;;3101:34;;;1301:71:4;;1321:5;;1343:14;;;;;3014:18:7;;1328:43:4;2867:274:7;1301:71:4;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:4;8910:8;8866:16;;-1:-1:-1;8942:15:4;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:4;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:4;;-1:-1:-1;;;;;178:32:7;;9033:40:4;;;160:51:7;133:18;;9033:40:4;14:203:7;222:131;-1:-1:-1;;;;;297:31:7;;287:42;;277:70;;343:1;340;333:12;277:70;222:131;:::o;358:608::-;444:6;452;460;468;521:3;509:9;500:7;496:23;492:33;489:53;;;538:1;535;528:12;489:53;583:23;;;-1:-1:-1;703:2:7;688:18;;675:32;;-1:-1:-1;806:2:7;791:18;;778:32;;-1:-1:-1;888:2:7;873:18;;860:32;901:33;860:32;901:33;:::i;:::-;358:608;;;;-1:-1:-1;358:608:7;;-1:-1:-1;;358:608:7:o;1345:818::-;1431:6;1439;1447;1455;1508:2;1496:9;1487:7;1483:23;1479:32;1476:52;;;1524:1;1521;1514:12;1476:52;1569:23;;;-1:-1:-1;1689:2:7;1674:18;;1661:32;;-1:-1:-1;1770:2:7;1755:18;;1742:32;1797:18;1786:30;;1783:50;;;1829:1;1826;1819:12;1783:50;1852:22;;1905:4;1897:13;;1893:27;-1:-1:-1;1883:55:7;;1934:1;1931;1924:12;1883:55;1974:2;1961:16;2000:18;1992:6;1989:30;1986:50;;;2032:1;2029;2022:12;1986:50;2077:7;2072:2;2063:6;2059:2;2055:15;2051:24;2048:37;2045:57;;;2098:1;2095;2088:12;2045:57;1345:818;;;;-1:-1:-1;2129:2:7;2121:11;;-1:-1:-1;;;1345:818:7:o;3146:277::-;3213:6;3266:2;3254:9;3245:7;3241:23;3237:32;3234:52;;;3282:1;3279;3272:12;3234:52;3314:9;3308:16;3367:5;3360:13;3353:21;3346:5;3343:32;3333:60;;3389:1;3386;3379:12;3333:60;3412:5;3146:277;-1:-1:-1;;;3146:277:7:o;3428:766::-;3708:1;3704;3699:3;3695:11;3691:19;3683:6;3679:32;3668:9;3661:51;3762:6;3755:14;3748:22;3743:2;3732:9;3728:18;3721:50;3807:6;3802:2;3791:9;3787:18;3780:34;3879:1;3875;3870:3;3866:11;3862:19;3854:6;3850:32;3845:2;3834:9;3830:18;3823:60;3920:3;3914;3903:9;3899:19;3892:32;3642:4;3953:6;3947:13;3997:6;3991:3;3980:9;3976:19;3969:35;4057:6;4052:2;4044:6;4040:15;4034:3;4023:9;4019:19;4013:51;4114:1;4108:3;4099:6;4088:9;4084:22;4080:32;4073:43;4184:3;4177:2;4173:7;4168:2;4160:6;4156:15;4152:29;4141:9;4137:45;4133:55;4125:63;;;3428:766;;;;;;;;:::o;4199:341::-;4276:6;4284;4337:2;4325:9;4316:7;4312:23;4308:32;4305:52;;;4353:1;4350;4343:12;4305:52;-1:-1:-1;;4398:16:7;;4504:2;4489:18;;;4483:25;4398:16;;4483:25;;-1:-1:-1;4199:341:7:o;4545:233::-;4580:3;-1:-1:-1;;;4601:22:7;;4598:145;;4665:10;4660:3;4656:20;4653:1;4646:31;4700:4;4697:1;4690:15;4728:4;4725:1;4718:15;4598:145;-1:-1:-1;4763:1:7;4759:13;;4545:233::o;5734:375::-;5810:6;5818;5871:2;5859:9;5850:7;5846:23;5842:32;5839:52;;;5887:1;5884;5877:12;5839:52;5926:9;5913:23;5945:31;5970:5;5945:31;:::i;:::-;5995:5;6073:2;6058:18;;;;6045:32;;-1:-1:-1;;;5734:375:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "496200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"USDC()": "226",
								"VELO()": "248",
								"pool()": "infinite",
								"swapExactInputSingle(uint256,uint256,uint256,uint160)": "infinite",
								"uniswapV3SwapCallback(int256,int256,bytes)": "infinite",
								"zeroForOne()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1054,
									"end": 1165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1054,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1110,
									"end": 1122,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1122,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1122,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1122,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1110,
									"end": 1122,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1133,
									"end": 1157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1133,
									"end": 1157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1133,
									"end": 1157,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1133,
									"end": 1157,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 466,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 96,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 130,
									"end": 137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 126,
									"end": 149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 122,
									"end": 154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 119,
									"end": 171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 119,
									"end": 171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 167,
									"end": 168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 165,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 119,
									"end": 171,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 238,
									"end": 269,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 238,
									"end": 269,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 228,
									"end": 270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 228,
									"end": 270,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 218,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 284,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 282,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 218,
									"end": 288,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 357,
									"end": 359,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 342,
									"end": 360,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 342,
									"end": 360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 336,
									"end": 361,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 399,
									"end": 414,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 399,
									"end": 414,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 392,
									"end": 415,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 380,
									"end": 416,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 380,
									"end": 416,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 370,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 370,
									"end": 434,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 428,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 432,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 370,
									"end": 434,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 370,
									"end": 434,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 453,
									"end": 460,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 443,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 443,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 443,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 466,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "679"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "671"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 4720,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c7f899d8cdbf26dd0ffe83f580438f626a1ee03a9005d7242036c0b48aa259964736f6c634300081d0033",
									".code": [
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "16F0115B"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "77FC0617"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "89A30271"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "A0EEB39A"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "B25B6BD7"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "FA461E33"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 4720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "671"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 616,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 616,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1588,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1588,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 971,
											"end": 1148,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 722,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 649,
											"end": 722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 649,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "B2C639C533813F4AA9D7837CAF62653D097FF85"
										},
										{
											"begin": 649,
											"end": 722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 649,
											"end": 722,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 749,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "9560E827AF36C94D2AC33A39BCE1FE78631088DB"
										},
										{
											"begin": 749,
											"end": 822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 749,
											"end": 822,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 849,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 849,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 849,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 881,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "679"
										},
										{
											"begin": 849,
											"end": 881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 849,
											"end": 881,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 849,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 849,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 849,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1153,
											"end": 1340,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3506,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3506,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1859,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1878,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1878,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DDD85C08191958591B1A5B9948195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1843,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1931,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1935,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2739,
											"end": 2757,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2739,
											"end": 2757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081A5B9C1D5D08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2821,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2518,
											"end": 2862,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1915,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "B2C639C533813F4AA9D7837CAF62653D097FF85"
										},
										{
											"begin": 2046,
											"end": 2056,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2081,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2016,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "671"
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 680,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "B2C639C533813F4AA9D7837CAF62653D097FF85"
										},
										{
											"begin": 680,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2093,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2233,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2515961"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "671"
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "128ACB08"
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "679"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2548,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2609,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2342,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2342,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2342,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "679"
										},
										{
											"begin": 2774,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2774,
											"end": 2824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2816,
											"end": 2823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2815,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2823,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2815,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2774,
											"end": 2824,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2824,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2774,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2796,
											"end": 2803,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2795,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2795,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2824,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2915,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2915,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 4987,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5091,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74206F757470757420616D6F756E74000000000000"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5127,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5109,
											"end": 5127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4783,
											"end": 5133,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2878,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "9560E827AF36C94D2AC33A39BCE1FE78631088DB"
										},
										{
											"begin": 3025,
											"end": 3035,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2999,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3047,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2999,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5380,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "2D043CE009FF53FD444B0F4F5FF4C3F4EE293265203F77F156EEB33B595DFC4F"
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "671"
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21031B0B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5688,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5391,
											"end": 5729,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3826,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3997,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "679"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4108,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4096,
											"end": 4112,
											"name": "SGT",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6298,
											"end": 6319,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616D6F756E743044656C7461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6114,
											"end": 6458,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4088,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4172,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4176,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6706,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616D6F756E743144656C7461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6741,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6723,
											"end": 6741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6463,
											"end": 6807,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4152,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "B2C639C533813F4AA9D7837CAF62653D097FF85"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4413,
											"end": 4414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "SGT",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6706,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616D6F756E743144656C7461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6741,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6723,
											"end": 6741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6463,
											"end": 6807,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4390,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4474,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4462,
											"end": 4478,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6298,
											"end": 6319,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616D6F756E743044656C7461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6114,
											"end": 6458,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4454,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4540,
											"end": 4552,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "9560E827AF36C94D2AC33A39BCE1FE78631088DB"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3983,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4659,
											"end": 4690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4695,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "671"
										},
										{
											"begin": 4697,
											"end": 4708,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4659,
											"end": 4709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4709,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4659,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 4717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 7064,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7064,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7177,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2867,
											"end": 3141,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 353,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 222,
											"end": 353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 297,
											"end": 328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 297,
											"end": 328,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 287,
											"end": 329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 287,
											"end": 329,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 277,
											"end": 347,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 222,
											"end": 353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 966,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 444,
											"end": 450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 524,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 509,
											"end": 518,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 500,
											"end": 507,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 492,
											"end": 525,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 489,
											"end": 542,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 540,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 583,
											"end": 606,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 583,
											"end": 606,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 703,
											"end": 705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 706,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 688,
											"end": 706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 675,
											"end": 707,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 809,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 791,
											"end": 809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 778,
											"end": 810,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 778,
											"end": 810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 888,
											"end": 890,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 873,
											"end": 891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 860,
											"end": 892,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 860,
											"end": 892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 901,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 901,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 358,
											"end": 966,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 358,
											"end": 966,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 358,
											"end": 966,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 358,
											"end": 966,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 358,
											"end": 966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 966,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 358,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1345,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1496,
											"end": 1505,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1506,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1511,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1528,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1476,
											"end": 1528,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1476,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1693,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1693,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1774,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1874,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1920,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1936,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1977,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 2019,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1986,
											"end": 2036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2036,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1986,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2085,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2045,
											"end": 2102,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2102,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2045,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 2163,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 2163,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 2163,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 2163,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3423,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3146,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3264,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3237,
											"end": 3269,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3373,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3333,
											"end": 3393,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3389,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3391,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3333,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3423,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3146,
											"end": 3423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3702,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3695,
											"end": 3706,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3711,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3762,
											"end": 3768,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3770,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3804,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3866,
											"end": 3877,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3882,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3847,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3834,
											"end": 3843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3923,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3914,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3903,
											"end": 3912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3924,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3947,
											"end": 3960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 3994,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 4004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4064,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4097,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4177,
											"end": 4179,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4173,
											"end": 4180,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4181,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 4194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4540,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4199,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4323,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4335,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4340,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4357,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4305,
											"end": 4357,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4357,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4305,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4508,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4414,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4778,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4545,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4598,
											"end": 4743,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4675,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4656,
											"end": 4676,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4677,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4732,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4733,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4743,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4598,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 6109,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5734,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5859,
											"end": 5868,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5857,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5874,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5839,
											"end": 5891,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5839,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5839,
											"end": 5891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5889,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5839,
											"end": 5891,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5839,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5936,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5945,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 6000,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5734,
											"end": 6109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"velo/slipstream-main/contracts/core/VeloBot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"USDC()": "89a30271",
							"VELO()": "a0eeb39a",
							"pool()": "16f0115b",
							"swapExactInputSingle(uint256,uint256,uint256,uint160)": "77fc0617",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33",
							"zeroForOne()": "b25b6bd7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_zeroForOne\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VELO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroForOne\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256,uint256,uint256,uint160)\":{\"params\":{\"amountIn\":\"The amount of USDC to swap\",\"amountOutMinimum\":\"The minimum amount of VELO to receive\",\"deadline\":\"The timestamp after which the transaction will revert\",\"sqrtPriceLimitX96\":\"The price limit for the swap (0 for no limit)\"},\"returns\":{\"amountOut\":\"The amount of VELO received\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"params\":{\"amount0Delta\":\"The change in token0 balance (negative if we pay, positive if we receive)\",\"amount1Delta\":\"The change in token1 balance (negative if we pay, positive if we receive)\",\"data\":\"Data passed from the swap call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256,uint256,uint256,uint160)\":{\"notice\":\"Swaps a fixed amount of USDC for VELO directly with the pool\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Callback function called by the pool during the swap\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"velo/slipstream-main/contracts/core/VeloBot.sol\":\"DirectPoolSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"velo/slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x9ae842b8147049e1073dcdf1bb2e0939341e096499bf6b4be86b4813e33b2663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de0b4997a7dbe5bb06ac1a482d115893130cef16f9f95c47bbff498ecbb6504b\",\"dweb:/ipfs/QmWqFwcLtzs8pxyo7YwYFBxNGxj5qG3NvLk1e2wjtbCWgH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapExactInputSingle(uint256,uint256,uint256,uint160)": {
								"notice": "Swaps a fixed amount of USDC for VELO directly with the pool"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Callback function called by the pool during the swap"
							}
						},
						"version": 1
					}
				},
				"ICLPoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"velo/slipstream-main/contracts/core/VeloBot.sol\":\"ICLPoolActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"velo/slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x9ae842b8147049e1073dcdf1bb2e0939341e096499bf6b4be86b4813e33b2663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de0b4997a7dbe5bb06ac1a482d115893130cef16f9f95c47bbff498ecbb6504b\",\"dweb:/ipfs/QmWqFwcLtzs8pxyo7YwYFBxNGxj5qG3NvLk1e2wjtbCWgH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> velo/slipstream-main/contracts/core/VeloBot.sol:95:10:\n   |\n95 |         (address recipient, uint256 amountOutMinimum) = abi.decode(data, (address, uint256));\n   |          ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3796,
					"file": "velo/slipstream-main/contracts/core/VeloBot.sol",
					"start": 3779
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> velo/slipstream-main/contracts/core/VeloBot.sol:95:29:\n   |\n95 |         (address recipient, uint256 amountOutMinimum) = abi.decode(data, (address, uint256));\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3822,
					"file": "velo/slipstream-main/contracts/core/VeloBot.sol",
					"start": 3798
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							643
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 643,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								643,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 644,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 643,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 644,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"velo/slipstream-main/contracts/core/VeloBot.sol": {
				"ast": {
					"absolutePath": "velo/slipstream-main/contracts/core/VeloBot.sol",
					"exportedSymbols": {
						"DirectPoolSwap": [
							926
						],
						"ICLPoolActions": [
							665
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 168,
							"src": "60:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 632,
							"src": "118:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICLPoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665
							],
							"name": "ICLPoolActions",
							"nameLocation": "268:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "128acb08",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "299:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "322:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "347:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "342:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "342:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "375:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "368:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "409:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "401:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 654,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "452:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "437:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "437:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:160:6"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "489:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "482:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 659,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "482:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "505:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "498:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 661,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:32:6"
									},
									"scope": 665,
									"src": "290:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 927,
							"src": "258:259:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DirectPoolSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926
							],
							"name": "DirectPoolSwap",
							"nameLocation": "530:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 669,
									"libraryName": {
										"id": 666,
										"name": "SafeERC20",
										"nameLocations": [
											"558:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "558:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "552:27:6",
									"typeName": {
										"id": 668,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 667,
											"name": "IERC20",
											"nameLocations": [
												"572:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "572:6:6"
										},
										"referencedDeclaration": 167,
										"src": "572:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "16f0115b",
									"id": 671,
									"mutability": "immutable",
									"name": "pool",
									"nameLocation": "612:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "587:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 670,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "89a30271",
									"id": 674,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "673:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "649:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 672,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "649:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830623243363339633533333831336634416139443738333743416636323635336430393746663835",
										"id": 673,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "680:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a0eeb39a",
									"id": 677,
									"mutability": "constant",
									"name": "VELO",
									"nameLocation": "773:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "749:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 675,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839353630653832376146333663393444324163333361333962434531466537383633313038384462",
										"id": 676,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "780:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9560e827aF36c94D2Ac33a39bCE1Fe78631088Db"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b25b6bd7",
									"id": 679,
									"mutability": "immutable",
									"name": "zeroForOne",
									"nameLocation": "871:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "849:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 678,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "849:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2d043ce009ff53fd444b0f4f5ff4c3f4ee293265203f77f156eeb33b595dfc4f",
									"id": 687,
									"name": "SwapExecuted",
									"nameLocation": "974:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1003:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "987:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1017:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1009:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1035:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1027:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:59:6"
									},
									"src": "968:78:6"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "1099:66:6",
										"statements": [
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 694,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1110:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 695,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "1117:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1110:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1110:12:6"
											},
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 698,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "1133:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 699,
														"name": "_zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "1146:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1133:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1133:24:6"
											}
										]
									},
									"id": 703,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "1074:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1066:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "_zeroForOne",
												"nameLocation": "1086:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1081:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1081:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:33:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:0:6"
									},
									"scope": 926,
									"src": "1054:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1787:1383:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "1851:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 719,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1863:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1869:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1863:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1851:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5377617020646561646c696e652065787069726564",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1880:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f649e76d71df20e80337a2546c509955b4e6065141b8b9bd1833eafc7bf8c650",
																"typeString": "literal_string \"Swap deadline expired\""
															},
															"value": "Swap deadline expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f649e76d71df20e80337a2546c509955b4e6065141b8b9bd1833eafc7bf8c650",
																"typeString": "literal_string \"Swap deadline expired\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "1843:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "1923:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1934:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1923:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420616d6f756e74",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf",
																"typeString": "literal_string \"Invalid input amount\""
															},
															"value": "Invalid input amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf",
																"typeString": "literal_string \"Invalid input amount\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1915:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "1915:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 736,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2046:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2050:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2046:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 740,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2066:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DirectPoolSwap_$926",
																		"typeString": "contract DirectPoolSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DirectPoolSwap_$926",
																		"typeString": "contract DirectPoolSwap"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2058:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2058:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2058:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "2073:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 733,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "2023:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 732,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2016:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2016:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2029:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "2016:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2016:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2016:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "2114:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "2120:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 746,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "2100:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 745,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2093:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2093:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2106:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "2093:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "2093:36:6"
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2205:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "2192:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 753,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2192:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2223:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2227:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2223:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2235:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 755,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2212:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2216:6:6",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "2212:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2192:60:6"
											},
											{
												"assignments": [
													763,
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "amount0",
														"nameLocation": "2315:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "2308:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 762,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2308:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "amount1",
														"nameLocation": "2331:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "2324:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 764,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2324:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 772,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2390:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DirectPoolSwap_$926",
																		"typeString": "contract DirectPoolSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DirectPoolSwap_$926",
																		"typeString": "contract DirectPoolSwap"
																	}
																],
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2382:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2382:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2382:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2456:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 777,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "2540:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2533:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 775,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2533:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2533:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 779,
															"name": "sqrtPriceLimitX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "2592:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 780,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "2656:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 767,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "2357:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 766,
																"name": "ICLPoolActions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "2342:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolActions_$665_$",
																	"typeString": "type(contract ICLPoolActions)"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2342:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolActions_$665",
																"typeString": "contract ICLPoolActions"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2363:4:6",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "2342:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:354:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2307:389:6"
											},
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 783,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2762:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 784,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2774:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [
																{
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2815:8:6",
																	"subExpression": {
																		"id": 792,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "2816:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2807:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 790,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2807:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2774:50:6",
														"trueExpression": {
															"arguments": [
																{
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2795:8:6",
																	"subExpression": {
																		"id": 787,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "2796:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2787:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 785,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2787:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2762:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "2762:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "2886:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 800,
																"name": "amountOutMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "2899:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2886:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2917:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2878:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2878:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3025:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3029:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3025:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3037:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 806,
																	"name": "VELO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "3006:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 805,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2999:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2999:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3012:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "2999:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "2999:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3101:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3105:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3101:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "3113:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 818,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3123:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "SwapExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "3088:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "EmitStatement",
												"src": "3083:50:6"
											},
											{
												"expression": {
													"id": 821,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 715,
													"src": "3153:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 716,
												"id": 822,
												"nodeType": "Return",
												"src": "3146:16:6"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1173:409:6",
										"text": "@notice Swaps a fixed amount of USDC for VELO directly with the pool\n @param amountIn The amount of USDC to swap\n @param amountOutMinimum The minimum amount of VELO to receive\n @param deadline The timestamp after which the transaction will revert\n @param sqrtPriceLimitX96 The price limit for the swap (0 for no limit)\n @return amountOut The amount of VELO received"
									},
									"functionSelector": "77fc0617",
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "1597:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1636:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1628:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "amountOutMinimum",
												"nameLocation": "1663:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1655:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1698:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1690:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "1725:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1717:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 711,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:132:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1776:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1768:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1767:19:6"
									},
									"scope": 926,
									"src": "1588:1582:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "3643:1074:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 835,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3704:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3708:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3704:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 837,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "3718:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3704:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642063616c6c6572",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3724:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
																"typeString": "literal_string \"Invalid caller\""
															},
															"value": "Invalid caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
																"typeString": "literal_string \"Invalid caller\""
															}
														],
														"id": 834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3696:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3696:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "3696:45:6"
											},
											{
												"assignments": [
													843,
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "recipient",
														"nameLocation": "3787:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "3779:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 842,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3779:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "amountOutMinimum",
														"nameLocation": "3806:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "3798:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3798:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"arguments": [
														{
															"id": 848,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3844:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 849,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3844:7:6",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3853:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 851,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3853:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 853,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3843:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(address),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(address),type(uint256))"
															}
														],
														"expression": {
															"id": 846,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3826:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3830:6:6",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "3826:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3826:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
														"typeString": "tuple(address payable,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3778:84:6"
											},
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "amountToPay",
														"nameLocation": "3930:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "3922:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3922:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"nodeType": "VariableDeclarationStatement",
												"src": "3922:19:6"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "tokenToPay",
														"nameLocation": "3960:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "3952:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 859,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3952:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"nodeType": "VariableDeclarationStatement",
												"src": "3952:18:6"
											},
											{
												"condition": {
													"id": 862,
													"name": "zeroForOne",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 679,
													"src": "3987:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 914,
													"nodeType": "Block",
													"src": "4301:296:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 890,
																			"name": "amount1Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "4398:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4413:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4398:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e743144656c7461",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4416:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc",
																			"typeString": "literal_string \"Invalid amount1Delta\""
																		},
																		"value": "Invalid amount1Delta"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc",
																			"typeString": "literal_string \"Invalid amount1Delta\""
																		}
																	],
																	"id": 889,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4390:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4390:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "4390:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 897,
																			"name": "amount0Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "4462:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4477:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4462:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e743044656c7461",
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4480:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa",
																			"typeString": "literal_string \"Invalid amount0Delta\""
																		},
																		"value": "Invalid amount0Delta"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa",
																			"typeString": "literal_string \"Invalid amount0Delta\""
																		}
																	],
																	"id": 896,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4454:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4454:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "ExpressionStatement",
															"src": "4454:49:6"
														},
														{
															"expression": {
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 903,
																	"name": "amountToPay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "4518:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 906,
																			"name": "amount1Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "4540:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4532:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 904,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4532:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4532:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4518:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 909,
															"nodeType": "ExpressionStatement",
															"src": "4518:35:6"
														},
														{
															"expression": {
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 910,
																	"name": "tokenToPay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "4568:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 911,
																	"name": "VELO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "4581:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4568:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 913,
															"nodeType": "ExpressionStatement",
															"src": "4568:17:6"
														}
													]
												},
												"id": 915,
												"nodeType": "IfStatement",
												"src": "3983:614:6",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "3999:296:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 864,
																			"name": "amount0Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "4096:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4111:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4096:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e743044656c7461",
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4114:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa",
																			"typeString": "literal_string \"Invalid amount0Delta\""
																		},
																		"value": "Invalid amount0Delta"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cc6cd7e4898d58c263cbedd38052efbb85e99e4487eb06b511c71069f4f42faa",
																			"typeString": "literal_string \"Invalid amount0Delta\""
																		}
																	],
																	"id": 863,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4088:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4088:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "4088:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 871,
																			"name": "amount1Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "4160:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4175:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4160:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e743144656c7461",
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4178:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc",
																			"typeString": "literal_string \"Invalid amount1Delta\""
																		},
																		"value": "Invalid amount1Delta"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3d267accaf17e6da0d4f2044ac963f7ba004ec156c32a9d52e8d8e2c957df4bc",
																			"typeString": "literal_string \"Invalid amount1Delta\""
																		}
																	],
																	"id": 870,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4152:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4152:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "4152:49:6"
														},
														{
															"expression": {
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 877,
																	"name": "amountToPay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "4216:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 880,
																			"name": "amount0Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "4238:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4230:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 878,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4230:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4230:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4216:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "4216:35:6"
														},
														{
															"expression": {
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 884,
																	"name": "tokenToPay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "4266:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 885,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "4279:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4266:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 887,
															"nodeType": "ExpressionStatement",
															"src": "4266:17:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "4691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "amountToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4697:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 917,
																	"name": "tokenToPay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "4666:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 916,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4659:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4678:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "4659:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4659:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "4659:50:6"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "3178:322:6",
										"text": "@notice Callback function called by the pool during the swap\n @param amount0Delta The change in token0 balance (negative if we pay, positive if we receive)\n @param amount1Delta The change in token1 balance (negative if we pay, positive if we receive)\n @param data Data passed from the swap call"
									},
									"functionSelector": "fa461e33",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "3515:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "3554:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3547:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 826,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3547:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "3584:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3577:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 828,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3577:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3622:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3607:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:97:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3643:0:6"
									},
									"scope": 926,
									"src": "3506:1211:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 927,
							"src": "521:4199:6",
							"usedErrors": [
								179
							],
							"usedEvents": [
								687
							]
						}
					],
					"src": "33:4687:6"
				},
				"id": 6
			}
		}
	}
}